                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 4.0.0 #11528 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module monkey1
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _UpdateMonkeyFrame
                             13 	.globl _ShowMonkey
                             14 	.globl _ClearMonkeys
                             15 	.globl _InitializeMonkeys
                             16 	.globl _posY
                             17 	.globl _posX
                             18 	.globl _sprcol
                             19 	.globl _text02
                             20 	.globl _text01
                             21 	.globl _INKEY
                             22 	.globl _WAIT
                             23 	.globl _CLS
                             24 	.globl _VPRINT
                             25 	.globl _VPOKEARRAY
                             26 	.globl _LOCATE
                             27 	.globl _PRINT
                             28 	.globl _PEEK
                             29 	.globl _PEEKW
                             30 	.globl _COLOR
                             31 	.globl _VPOKE
                             32 	.globl _VPEEK
                             33 	.globl _FillVRAM
                             34 	.globl _CopyToVRAM
                             35 	.globl _setFont
                             36 	.globl _testSPRITES
                             37 	.globl _showSprites
                             38 ;--------------------------------------------------------
                             39 ; special function registers
                             40 ;--------------------------------------------------------
                             41 ;--------------------------------------------------------
                             42 ; ram data
                             43 ;--------------------------------------------------------
                             44 	.area _DATA
                             45 ;--------------------------------------------------------
                             46 ; ram data
                             47 ;--------------------------------------------------------
                             48 	.area _INITIALIZED
                             49 ;--------------------------------------------------------
                             50 ; absolute external ram data
                             51 ;--------------------------------------------------------
                             52 	.area _DABS (ABS)
                             53 ;--------------------------------------------------------
                             54 ; global & static initialisations
                             55 ;--------------------------------------------------------
                             56 	.area _HOME
                             57 	.area _GSINIT
                             58 	.area _GSFINAL
                             59 	.area _GSINIT
                             60 ;--------------------------------------------------------
                             61 ; Home
                             62 ;--------------------------------------------------------
                             63 	.area _HOME
                             64 	.area _HOME
                             65 ;--------------------------------------------------------
                             66 ; code
                             67 ;--------------------------------------------------------
                             68 	.area _CODE
                             69 ;src/monkey1.c:121: void main(void)
                             70 ;	---------------------------------
                             71 ; Function main
                             72 ; ---------------------------------
   0000                      73 _main::
                             74 ;src/monkey1.c:125: InitializeMonkeys();
   0000 CDr00r00      [17]   75 	call	_InitializeMonkeys
                             76 ;src/monkey1.c:131: __endasm;
   0003 21 B0 F3      [10]   77 	ld	HL,#0xF3B0 ;0xF3B0 system variable
   0006 3E 20         [ 7]   78 	ld	A,#32
   0008 77            [ 7]   79 	ld	(HL),A ;WIDTH(32)
                             80 ;src/monkey1.c:134: testSPRITES();
   0009 CDrFAr03      [17]   81 	call	_testSPRITES
                             82 ;src/monkey1.c:144: WAIT(30*10);
   000C 21 2C 01      [10]   83 	ld	hl, #0x012c
   000F E5            [11]   84 	push	hl
   0010 CDr5Er02      [17]   85 	call	_WAIT
   0013 F1            [10]   86 	pop	af
                             87 ;src/monkey1.c:158: }
   0014 C9            [10]   88 	ret
   0015                      89 _text01:
   0015 4D 6F 6E 6B 65 79    90 	.ascii "Monkey Library Test1 ROM"
        20 4C 69 62 72 61
        72 79 20 54 65 73
        74 31 20 52 4F 4D
   002D 00                   91 	.db 0x00
   002E                      92 _text02:
   002E 20 20 20 20 76 31    93 	.ascii "    v1.0 (05/April/2021)"
        2E 30 20 28 30 35
        2F 41 70 72 69 6C
        2F 32 30 32 31 29
   0046 00                   94 	.db 0x00
   0047                      95 _sprcol:
   0047 0C                   96 	.db #0x0c	; 12
   0048 02                   97 	.db #0x02	; 2
   0049 03                   98 	.db #0x03	; 3
   004A 07                   99 	.db #0x07	; 7
   004B 06                  100 	.db #0x06	; 6
   004C 08                  101 	.db #0x08	; 8
   004D 09                  102 	.db #0x09	; 9
   004E 0E                  103 	.db #0x0e	; 14
   004F                     104 _posX:
   004F F0                  105 	.db #0xf0	; 240
   0050 F0                  106 	.db #0xf0	; 240
   0051 F0                  107 	.db #0xf0	; 240
   0052 F0                  108 	.db #0xf0	; 240
   0053 EF                  109 	.db #0xef	; 239
   0054 EF                  110 	.db #0xef	; 239
   0055 EF                  111 	.db #0xef	; 239
   0056 EE                  112 	.db #0xee	; 238
   0057 EE                  113 	.db #0xee	; 238
   0058 ED                  114 	.db #0xed	; 237
   0059 EC                  115 	.db #0xec	; 236
   005A EC                  116 	.db #0xec	; 236
   005B EB                  117 	.db #0xeb	; 235
   005C EA                  118 	.db #0xea	; 234
   005D E9                  119 	.db #0xe9	; 233
   005E E8                  120 	.db #0xe8	; 232
   005F E7                  121 	.db #0xe7	; 231
   0060 E6                  122 	.db #0xe6	; 230
   0061 E4                  123 	.db #0xe4	; 228
   0062 E3                  124 	.db #0xe3	; 227
   0063 E2                  125 	.db #0xe2	; 226
   0064 E0                  126 	.db #0xe0	; 224
   0065 DF                  127 	.db #0xdf	; 223
   0066 DD                  128 	.db #0xdd	; 221
   0067 DC                  129 	.db #0xdc	; 220
   0068 DA                  130 	.db #0xda	; 218
   0069 D8                  131 	.db #0xd8	; 216
   006A D6                  132 	.db #0xd6	; 214
   006B D5                  133 	.db #0xd5	; 213
   006C D3                  134 	.db #0xd3	; 211
   006D D1                  135 	.db #0xd1	; 209
   006E CF                  136 	.db #0xcf	; 207
   006F CD                  137 	.db #0xcd	; 205
   0070 CA                  138 	.db #0xca	; 202
   0071 C8                  139 	.db #0xc8	; 200
   0072 C6                  140 	.db #0xc6	; 198
   0073 C4                  141 	.db #0xc4	; 196
   0074 C1                  142 	.db #0xc1	; 193
   0075 BF                  143 	.db #0xbf	; 191
   0076 BD                  144 	.db #0xbd	; 189
   0077 BA                  145 	.db #0xba	; 186
   0078 B8                  146 	.db #0xb8	; 184
   0079 B5                  147 	.db #0xb5	; 181
   007A B3                  148 	.db #0xb3	; 179
   007B B0                  149 	.db #0xb0	; 176
   007C AD                  150 	.db #0xad	; 173
   007D AB                  151 	.db #0xab	; 171
   007E A8                  152 	.db #0xa8	; 168
   007F A5                  153 	.db #0xa5	; 165
   0080 A3                  154 	.db #0xa3	; 163
   0081 A0                  155 	.db #0xa0	; 160
   0082 9D                  156 	.db #0x9d	; 157
   0083 9A                  157 	.db #0x9a	; 154
   0084 97                  158 	.db #0x97	; 151
   0085 95                  159 	.db #0x95	; 149
   0086 92                  160 	.db #0x92	; 146
   0087 8F                  161 	.db #0x8f	; 143
   0088 8C                  162 	.db #0x8c	; 140
   0089 89                  163 	.db #0x89	; 137
   008A 86                  164 	.db #0x86	; 134
   008B 83                  165 	.db #0x83	; 131
   008C 80                  166 	.db #0x80	; 128
   008D 7D                  167 	.db #0x7d	; 125
   008E 7A                  168 	.db #0x7a	; 122	'z'
   008F 77                  169 	.db #0x77	; 119	'w'
   0090 74                  170 	.db #0x74	; 116	't'
   0091 71                  171 	.db #0x71	; 113	'q'
   0092 6E                  172 	.db #0x6e	; 110	'n'
   0093 6B                  173 	.db #0x6b	; 107	'k'
   0094 69                  174 	.db #0x69	; 105	'i'
   0095 66                  175 	.db #0x66	; 102	'f'
   0096 63                  176 	.db #0x63	; 99	'c'
   0097 60                  177 	.db #0x60	; 96
   0098 5D                  178 	.db #0x5d	; 93
   0099 5A                  179 	.db #0x5a	; 90	'Z'
   009A 57                  180 	.db #0x57	; 87	'W'
   009B 54                  181 	.db #0x54	; 84	'T'
   009C 52                  182 	.db #0x52	; 82	'R'
   009D 4F                  183 	.db #0x4f	; 79	'O'
   009E 4C                  184 	.db #0x4c	; 76	'L'
   009F 49                  185 	.db #0x49	; 73	'I'
   00A0 47                  186 	.db #0x47	; 71	'G'
   00A1 44                  187 	.db #0x44	; 68	'D'
   00A2 41                  188 	.db #0x41	; 65	'A'
   00A3 3F                  189 	.db #0x3f	; 63
   00A4 3C                  190 	.db #0x3c	; 60
   00A5 39                  191 	.db #0x39	; 57	'9'
   00A6 37                  192 	.db #0x37	; 55	'7'
   00A7 34                  193 	.db #0x34	; 52	'4'
   00A8 32                  194 	.db #0x32	; 50	'2'
   00A9 30                  195 	.db #0x30	; 48	'0'
   00AA 2D                  196 	.db #0x2d	; 45
   00AB 2B                  197 	.db #0x2b	; 43
   00AC 29                  198 	.db #0x29	; 41
   00AD 27                  199 	.db #0x27	; 39
   00AE 24                  200 	.db #0x24	; 36
   00AF 22                  201 	.db #0x22	; 34
   00B0 20                  202 	.db #0x20	; 32
   00B1 1E                  203 	.db #0x1e	; 30
   00B2 1C                  204 	.db #0x1c	; 28
   00B3 1B                  205 	.db #0x1b	; 27
   00B4 19                  206 	.db #0x19	; 25
   00B5 17                  207 	.db #0x17	; 23
   00B6 15                  208 	.db #0x15	; 21
   00B7 14                  209 	.db #0x14	; 20
   00B8 12                  210 	.db #0x12	; 18
   00B9 10                  211 	.db #0x10	; 16
   00BA 0F                  212 	.db #0x0f	; 15
   00BB 0E                  213 	.db #0x0e	; 14
   00BC 0C                  214 	.db #0x0c	; 12
   00BD 0B                  215 	.db #0x0b	; 11
   00BE 0A                  216 	.db #0x0a	; 10
   00BF 09                  217 	.db #0x09	; 9
   00C0 08                  218 	.db #0x08	; 8
   00C1 07                  219 	.db #0x07	; 7
   00C2 06                  220 	.db #0x06	; 6
   00C3 05                  221 	.db #0x05	; 5
   00C4 04                  222 	.db #0x04	; 4
   00C5 03                  223 	.db #0x03	; 3
   00C6 03                  224 	.db #0x03	; 3
   00C7 02                  225 	.db #0x02	; 2
   00C8 02                  226 	.db #0x02	; 2
   00C9 01                  227 	.db #0x01	; 1
   00CA 01                  228 	.db #0x01	; 1
   00CB 00                  229 	.db #0x00	; 0
   00CC 00                  230 	.db #0x00	; 0
   00CD 00                  231 	.db #0x00	; 0
   00CE 00                  232 	.db #0x00	; 0
   00CF 00                  233 	.db #0x00	; 0
   00D0 00                  234 	.db #0x00	; 0
   00D1 00                  235 	.db #0x00	; 0
   00D2 00                  236 	.db #0x00	; 0
   00D3 01                  237 	.db #0x01	; 1
   00D4 01                  238 	.db #0x01	; 1
   00D5 02                  239 	.db #0x02	; 2
   00D6 02                  240 	.db #0x02	; 2
   00D7 03                  241 	.db #0x03	; 3
   00D8 03                  242 	.db #0x03	; 3
   00D9 04                  243 	.db #0x04	; 4
   00DA 05                  244 	.db #0x05	; 5
   00DB 06                  245 	.db #0x06	; 6
   00DC 07                  246 	.db #0x07	; 7
   00DD 08                  247 	.db #0x08	; 8
   00DE 09                  248 	.db #0x09	; 9
   00DF 0A                  249 	.db #0x0a	; 10
   00E0 0B                  250 	.db #0x0b	; 11
   00E1 0C                  251 	.db #0x0c	; 12
   00E2 0E                  252 	.db #0x0e	; 14
   00E3 0F                  253 	.db #0x0f	; 15
   00E4 10                  254 	.db #0x10	; 16
   00E5 12                  255 	.db #0x12	; 18
   00E6 14                  256 	.db #0x14	; 20
   00E7 15                  257 	.db #0x15	; 21
   00E8 17                  258 	.db #0x17	; 23
   00E9 19                  259 	.db #0x19	; 25
   00EA 1B                  260 	.db #0x1b	; 27
   00EB 1C                  261 	.db #0x1c	; 28
   00EC 1E                  262 	.db #0x1e	; 30
   00ED 20                  263 	.db #0x20	; 32
   00EE 22                  264 	.db #0x22	; 34
   00EF 24                  265 	.db #0x24	; 36
   00F0 27                  266 	.db #0x27	; 39
   00F1 29                  267 	.db #0x29	; 41
   00F2 2B                  268 	.db #0x2b	; 43
   00F3 2D                  269 	.db #0x2d	; 45
   00F4 30                  270 	.db #0x30	; 48	'0'
   00F5 32                  271 	.db #0x32	; 50	'2'
   00F6 34                  272 	.db #0x34	; 52	'4'
   00F7 37                  273 	.db #0x37	; 55	'7'
   00F8 39                  274 	.db #0x39	; 57	'9'
   00F9 3C                  275 	.db #0x3c	; 60
   00FA 3F                  276 	.db #0x3f	; 63
   00FB 41                  277 	.db #0x41	; 65	'A'
   00FC 44                  278 	.db #0x44	; 68	'D'
   00FD 47                  279 	.db #0x47	; 71	'G'
   00FE 49                  280 	.db #0x49	; 73	'I'
   00FF 4C                  281 	.db #0x4c	; 76	'L'
   0100 4F                  282 	.db #0x4f	; 79	'O'
   0101 52                  283 	.db #0x52	; 82	'R'
   0102 54                  284 	.db #0x54	; 84	'T'
   0103 57                  285 	.db #0x57	; 87	'W'
   0104 5A                  286 	.db #0x5a	; 90	'Z'
   0105 5D                  287 	.db #0x5d	; 93
   0106 60                  288 	.db #0x60	; 96
   0107 63                  289 	.db #0x63	; 99	'c'
   0108 66                  290 	.db #0x66	; 102	'f'
   0109 69                  291 	.db #0x69	; 105	'i'
   010A 6B                  292 	.db #0x6b	; 107	'k'
   010B 6E                  293 	.db #0x6e	; 110	'n'
   010C 71                  294 	.db #0x71	; 113	'q'
   010D 74                  295 	.db #0x74	; 116	't'
   010E 77                  296 	.db #0x77	; 119	'w'
   010F 7A                  297 	.db #0x7a	; 122	'z'
   0110 7D                  298 	.db #0x7d	; 125
   0111 80                  299 	.db #0x80	; 128
   0112 83                  300 	.db #0x83	; 131
   0113 86                  301 	.db #0x86	; 134
   0114 89                  302 	.db #0x89	; 137
   0115 8C                  303 	.db #0x8c	; 140
   0116 8F                  304 	.db #0x8f	; 143
   0117 92                  305 	.db #0x92	; 146
   0118 95                  306 	.db #0x95	; 149
   0119 97                  307 	.db #0x97	; 151
   011A 9A                  308 	.db #0x9a	; 154
   011B 9D                  309 	.db #0x9d	; 157
   011C A0                  310 	.db #0xa0	; 160
   011D A3                  311 	.db #0xa3	; 163
   011E A5                  312 	.db #0xa5	; 165
   011F A8                  313 	.db #0xa8	; 168
   0120 AB                  314 	.db #0xab	; 171
   0121 AD                  315 	.db #0xad	; 173
   0122 B0                  316 	.db #0xb0	; 176
   0123 B3                  317 	.db #0xb3	; 179
   0124 B5                  318 	.db #0xb5	; 181
   0125 B8                  319 	.db #0xb8	; 184
   0126 BA                  320 	.db #0xba	; 186
   0127 BD                  321 	.db #0xbd	; 189
   0128 BF                  322 	.db #0xbf	; 191
   0129 C1                  323 	.db #0xc1	; 193
   012A C4                  324 	.db #0xc4	; 196
   012B C6                  325 	.db #0xc6	; 198
   012C C8                  326 	.db #0xc8	; 200
   012D CA                  327 	.db #0xca	; 202
   012E CD                  328 	.db #0xcd	; 205
   012F CF                  329 	.db #0xcf	; 207
   0130 D1                  330 	.db #0xd1	; 209
   0131 D3                  331 	.db #0xd3	; 211
   0132 D5                  332 	.db #0xd5	; 213
   0133 D6                  333 	.db #0xd6	; 214
   0134 D8                  334 	.db #0xd8	; 216
   0135 DA                  335 	.db #0xda	; 218
   0136 DC                  336 	.db #0xdc	; 220
   0137 DD                  337 	.db #0xdd	; 221
   0138 DF                  338 	.db #0xdf	; 223
   0139 E0                  339 	.db #0xe0	; 224
   013A E2                  340 	.db #0xe2	; 226
   013B E3                  341 	.db #0xe3	; 227
   013C E4                  342 	.db #0xe4	; 228
   013D E6                  343 	.db #0xe6	; 230
   013E E7                  344 	.db #0xe7	; 231
   013F E8                  345 	.db #0xe8	; 232
   0140 E9                  346 	.db #0xe9	; 233
   0141 EA                  347 	.db #0xea	; 234
   0142 EB                  348 	.db #0xeb	; 235
   0143 EC                  349 	.db #0xec	; 236
   0144 EC                  350 	.db #0xec	; 236
   0145 ED                  351 	.db #0xed	; 237
   0146 EE                  352 	.db #0xee	; 238
   0147 EE                  353 	.db #0xee	; 238
   0148 EF                  354 	.db #0xef	; 239
   0149 EF                  355 	.db #0xef	; 239
   014A EF                  356 	.db #0xef	; 239
   014B F0                  357 	.db #0xf0	; 240
   014C F0                  358 	.db #0xf0	; 240
   014D F0                  359 	.db #0xf0	; 240
   014E F0                  360 	.db #0xf0	; 240
   014F                     361 _posY:
   014F 58                  362 	.db #0x58	; 88	'X'
   0150 5A                  363 	.db #0x5a	; 90	'Z'
   0151 5C                  364 	.db #0x5c	; 92
   0152 5E                  365 	.db #0x5e	; 94
   0153 61                  366 	.db #0x61	; 97	'a'
   0154 63                  367 	.db #0x63	; 99	'c'
   0155 65                  368 	.db #0x65	; 101	'e'
   0156 67                  369 	.db #0x67	; 103	'g'
   0157 69                  370 	.db #0x69	; 105	'i'
   0158 6B                  371 	.db #0x6b	; 107	'k'
   0159 6D                  372 	.db #0x6d	; 109	'm'
   015A 70                  373 	.db #0x70	; 112	'p'
   015B 72                  374 	.db #0x72	; 114	'r'
   015C 74                  375 	.db #0x74	; 116	't'
   015D 76                  376 	.db #0x76	; 118	'v'
   015E 78                  377 	.db #0x78	; 120	'x'
   015F 7A                  378 	.db #0x7a	; 122	'z'
   0160 7C                  379 	.db #0x7c	; 124
   0161 7E                  380 	.db #0x7e	; 126
   0162 80                  381 	.db #0x80	; 128
   0163 82                  382 	.db #0x82	; 130
   0164 84                  383 	.db #0x84	; 132
   0165 85                  384 	.db #0x85	; 133
   0166 87                  385 	.db #0x87	; 135
   0167 89                  386 	.db #0x89	; 137
   0168 8B                  387 	.db #0x8b	; 139
   0169 8D                  388 	.db #0x8d	; 141
   016A 8E                  389 	.db #0x8e	; 142
   016B 90                  390 	.db #0x90	; 144
   016C 92                  391 	.db #0x92	; 146
   016D 93                  392 	.db #0x93	; 147
   016E 95                  393 	.db #0x95	; 149
   016F 96                  394 	.db #0x96	; 150
   0170 98                  395 	.db #0x98	; 152
   0171 99                  396 	.db #0x99	; 153
   0172 9B                  397 	.db #0x9b	; 155
   0173 9C                  398 	.db #0x9c	; 156
   0174 9E                  399 	.db #0x9e	; 158
   0175 9F                  400 	.db #0x9f	; 159
   0176 A0                  401 	.db #0xa0	; 160
   0177 A1                  402 	.db #0xa1	; 161
   0178 A3                  403 	.db #0xa3	; 163
   0179 A4                  404 	.db #0xa4	; 164
   017A A5                  405 	.db #0xa5	; 165
   017B A6                  406 	.db #0xa6	; 166
   017C A7                  407 	.db #0xa7	; 167
   017D A8                  408 	.db #0xa8	; 168
   017E A9                  409 	.db #0xa9	; 169
   017F A9                  410 	.db #0xa9	; 169
   0180 AA                  411 	.db #0xaa	; 170
   0181 AB                  412 	.db #0xab	; 171
   0182 AC                  413 	.db #0xac	; 172
   0183 AC                  414 	.db #0xac	; 172
   0184 AD                  415 	.db #0xad	; 173
   0185 AD                  416 	.db #0xad	; 173
   0186 AE                  417 	.db #0xae	; 174
   0187 AE                  418 	.db #0xae	; 174
   0188 AF                  419 	.db #0xaf	; 175
   0189 AF                  420 	.db #0xaf	; 175
   018A AF                  421 	.db #0xaf	; 175
   018B B0                  422 	.db #0xb0	; 176
   018C B0                  423 	.db #0xb0	; 176
   018D B0                  424 	.db #0xb0	; 176
   018E B0                  425 	.db #0xb0	; 176
   018F B0                  426 	.db #0xb0	; 176
   0190 B0                  427 	.db #0xb0	; 176
   0191 B0                  428 	.db #0xb0	; 176
   0192 B0                  429 	.db #0xb0	; 176
   0193 B0                  430 	.db #0xb0	; 176
   0194 AF                  431 	.db #0xaf	; 175
   0195 AF                  432 	.db #0xaf	; 175
   0196 AF                  433 	.db #0xaf	; 175
   0197 AE                  434 	.db #0xae	; 174
   0198 AE                  435 	.db #0xae	; 174
   0199 AD                  436 	.db #0xad	; 173
   019A AD                  437 	.db #0xad	; 173
   019B AC                  438 	.db #0xac	; 172
   019C AB                  439 	.db #0xab	; 171
   019D AB                  440 	.db #0xab	; 171
   019E AA                  441 	.db #0xaa	; 170
   019F A9                  442 	.db #0xa9	; 169
   01A0 A8                  443 	.db #0xa8	; 168
   01A1 A7                  444 	.db #0xa7	; 167
   01A2 A6                  445 	.db #0xa6	; 166
   01A3 A5                  446 	.db #0xa5	; 165
   01A4 A4                  447 	.db #0xa4	; 164
   01A5 A3                  448 	.db #0xa3	; 163
   01A6 A2                  449 	.db #0xa2	; 162
   01A7 A1                  450 	.db #0xa1	; 161
   01A8 A0                  451 	.db #0xa0	; 160
   01A9 9E                  452 	.db #0x9e	; 158
   01AA 9D                  453 	.db #0x9d	; 157
   01AB 9C                  454 	.db #0x9c	; 156
   01AC 9A                  455 	.db #0x9a	; 154
   01AD 99                  456 	.db #0x99	; 153
   01AE 97                  457 	.db #0x97	; 151
   01AF 96                  458 	.db #0x96	; 150
   01B0 94                  459 	.db #0x94	; 148
   01B1 92                  460 	.db #0x92	; 146
   01B2 91                  461 	.db #0x91	; 145
   01B3 8F                  462 	.db #0x8f	; 143
   01B4 8D                  463 	.db #0x8d	; 141
   01B5 8C                  464 	.db #0x8c	; 140
   01B6 8A                  465 	.db #0x8a	; 138
   01B7 88                  466 	.db #0x88	; 136
   01B8 86                  467 	.db #0x86	; 134
   01B9 84                  468 	.db #0x84	; 132
   01BA 83                  469 	.db #0x83	; 131
   01BB 81                  470 	.db #0x81	; 129
   01BC 7F                  471 	.db #0x7f	; 127
   01BD 7D                  472 	.db #0x7d	; 125
   01BE 7B                  473 	.db #0x7b	; 123
   01BF 79                  474 	.db #0x79	; 121	'y'
   01C0 77                  475 	.db #0x77	; 119	'w'
   01C1 75                  476 	.db #0x75	; 117	'u'
   01C2 73                  477 	.db #0x73	; 115	's'
   01C3 71                  478 	.db #0x71	; 113	'q'
   01C4 6F                  479 	.db #0x6f	; 111	'o'
   01C5 6C                  480 	.db #0x6c	; 108	'l'
   01C6 6A                  481 	.db #0x6a	; 106	'j'
   01C7 68                  482 	.db #0x68	; 104	'h'
   01C8 66                  483 	.db #0x66	; 102	'f'
   01C9 64                  484 	.db #0x64	; 100	'd'
   01CA 62                  485 	.db #0x62	; 98	'b'
   01CB 60                  486 	.db #0x60	; 96
   01CC 5D                  487 	.db #0x5d	; 93
   01CD 5B                  488 	.db #0x5b	; 91
   01CE 59                  489 	.db #0x59	; 89	'Y'
   01CF 57                  490 	.db #0x57	; 87	'W'
   01D0 55                  491 	.db #0x55	; 85	'U'
   01D1 53                  492 	.db #0x53	; 83	'S'
   01D2 50                  493 	.db #0x50	; 80	'P'
   01D3 4E                  494 	.db #0x4e	; 78	'N'
   01D4 4C                  495 	.db #0x4c	; 76	'L'
   01D5 4A                  496 	.db #0x4a	; 74	'J'
   01D6 48                  497 	.db #0x48	; 72	'H'
   01D7 46                  498 	.db #0x46	; 70	'F'
   01D8 44                  499 	.db #0x44	; 68	'D'
   01D9 41                  500 	.db #0x41	; 65	'A'
   01DA 3F                  501 	.db #0x3f	; 63
   01DB 3D                  502 	.db #0x3d	; 61
   01DC 3B                  503 	.db #0x3b	; 59
   01DD 39                  504 	.db #0x39	; 57	'9'
   01DE 37                  505 	.db #0x37	; 55	'7'
   01DF 35                  506 	.db #0x35	; 53	'5'
   01E0 33                  507 	.db #0x33	; 51	'3'
   01E1 31                  508 	.db #0x31	; 49	'1'
   01E2 2F                  509 	.db #0x2f	; 47
   01E3 2D                  510 	.db #0x2d	; 45
   01E4 2C                  511 	.db #0x2c	; 44
   01E5 2A                  512 	.db #0x2a	; 42
   01E6 28                  513 	.db #0x28	; 40
   01E7 26                  514 	.db #0x26	; 38
   01E8 24                  515 	.db #0x24	; 36
   01E9 23                  516 	.db #0x23	; 35
   01EA 21                  517 	.db #0x21	; 33
   01EB 1F                  518 	.db #0x1f	; 31
   01EC 1E                  519 	.db #0x1e	; 30
   01ED 1C                  520 	.db #0x1c	; 28
   01EE 1A                  521 	.db #0x1a	; 26
   01EF 19                  522 	.db #0x19	; 25
   01F0 17                  523 	.db #0x17	; 23
   01F1 16                  524 	.db #0x16	; 22
   01F2 14                  525 	.db #0x14	; 20
   01F3 13                  526 	.db #0x13	; 19
   01F4 12                  527 	.db #0x12	; 18
   01F5 10                  528 	.db #0x10	; 16
   01F6 0F                  529 	.db #0x0f	; 15
   01F7 0E                  530 	.db #0x0e	; 14
   01F8 0D                  531 	.db #0x0d	; 13
   01F9 0C                  532 	.db #0x0c	; 12
   01FA 0B                  533 	.db #0x0b	; 11
   01FB 0A                  534 	.db #0x0a	; 10
   01FC 09                  535 	.db #0x09	; 9
   01FD 08                  536 	.db #0x08	; 8
   01FE 07                  537 	.db #0x07	; 7
   01FF 06                  538 	.db #0x06	; 6
   0200 05                  539 	.db #0x05	; 5
   0201 05                  540 	.db #0x05	; 5
   0202 04                  541 	.db #0x04	; 4
   0203 03                  542 	.db #0x03	; 3
   0204 03                  543 	.db #0x03	; 3
   0205 02                  544 	.db #0x02	; 2
   0206 02                  545 	.db #0x02	; 2
   0207 01                  546 	.db #0x01	; 1
   0208 01                  547 	.db #0x01	; 1
   0209 01                  548 	.db #0x01	; 1
   020A 00                  549 	.db #0x00	; 0
   020B 00                  550 	.db #0x00	; 0
   020C 00                  551 	.db #0x00	; 0
   020D 00                  552 	.db #0x00	; 0
   020E 00                  553 	.db #0x00	; 0
   020F 00                  554 	.db #0x00	; 0
   0210 00                  555 	.db #0x00	; 0
   0211 00                  556 	.db #0x00	; 0
   0212 00                  557 	.db #0x00	; 0
   0213 01                  558 	.db #0x01	; 1
   0214 01                  559 	.db #0x01	; 1
   0215 01                  560 	.db #0x01	; 1
   0216 02                  561 	.db #0x02	; 2
   0217 02                  562 	.db #0x02	; 2
   0218 03                  563 	.db #0x03	; 3
   0219 03                  564 	.db #0x03	; 3
   021A 04                  565 	.db #0x04	; 4
   021B 04                  566 	.db #0x04	; 4
   021C 05                  567 	.db #0x05	; 5
   021D 06                  568 	.db #0x06	; 6
   021E 07                  569 	.db #0x07	; 7
   021F 07                  570 	.db #0x07	; 7
   0220 08                  571 	.db #0x08	; 8
   0221 09                  572 	.db #0x09	; 9
   0222 0A                  573 	.db #0x0a	; 10
   0223 0B                  574 	.db #0x0b	; 11
   0224 0C                  575 	.db #0x0c	; 12
   0225 0D                  576 	.db #0x0d	; 13
   0226 0F                  577 	.db #0x0f	; 15
   0227 10                  578 	.db #0x10	; 16
   0228 11                  579 	.db #0x11	; 17
   0229 12                  580 	.db #0x12	; 18
   022A 14                  581 	.db #0x14	; 20
   022B 15                  582 	.db #0x15	; 21
   022C 17                  583 	.db #0x17	; 23
   022D 18                  584 	.db #0x18	; 24
   022E 1A                  585 	.db #0x1a	; 26
   022F 1B                  586 	.db #0x1b	; 27
   0230 1D                  587 	.db #0x1d	; 29
   0231 1E                  588 	.db #0x1e	; 30
   0232 20                  589 	.db #0x20	; 32
   0233 22                  590 	.db #0x22	; 34
   0234 23                  591 	.db #0x23	; 35
   0235 25                  592 	.db #0x25	; 37
   0236 27                  593 	.db #0x27	; 39
   0237 29                  594 	.db #0x29	; 41
   0238 2B                  595 	.db #0x2b	; 43
   0239 2C                  596 	.db #0x2c	; 44
   023A 2E                  597 	.db #0x2e	; 46
   023B 30                  598 	.db #0x30	; 48	'0'
   023C 32                  599 	.db #0x32	; 50	'2'
   023D 34                  600 	.db #0x34	; 52	'4'
   023E 36                  601 	.db #0x36	; 54	'6'
   023F 38                  602 	.db #0x38	; 56	'8'
   0240 3A                  603 	.db #0x3a	; 58
   0241 3C                  604 	.db #0x3c	; 60
   0242 3E                  605 	.db #0x3e	; 62
   0243 40                  606 	.db #0x40	; 64
   0244 43                  607 	.db #0x43	; 67	'C'
   0245 45                  608 	.db #0x45	; 69	'E'
   0246 47                  609 	.db #0x47	; 71	'G'
   0247 49                  610 	.db #0x49	; 73	'I'
   0248 4B                  611 	.db #0x4b	; 75	'K'
   0249 4D                  612 	.db #0x4d	; 77	'M'
   024A 4F                  613 	.db #0x4f	; 79	'O'
   024B 52                  614 	.db #0x52	; 82	'R'
   024C 54                  615 	.db #0x54	; 84	'T'
   024D 56                  616 	.db #0x56	; 86	'V'
   024E 58                  617 	.db #0x58	; 88	'X'
                            618 ;src/monkey1.c:166: char INKEY() __naked
                            619 ;	---------------------------------
                            620 ; Function INKEY
                            621 ; ---------------------------------
   024F                     622 _INKEY::
                            623 ;src/monkey1.c:178: __endasm;
   024F DD E5         [15]  624 	push	IX
   0251 DD 21 00 00   [14]  625 	ld	IX,#0
   0255 DD 39         [15]  626 	add	IX,SP
   0257 CD 9F 00      [17]  627 	call	0x009F
   025A 6F            [ 4]  628 	ld	L,A
   025B DD E1         [14]  629 	pop	IX
   025D C9            [10]  630 	ret
                            631 ;src/monkey1.c:179: }
                            632 ;src/monkey1.c:185: void WAIT(uint cicles)
                            633 ;	---------------------------------
                            634 ; Function WAIT
                            635 ; ---------------------------------
   025E                     636 _WAIT::
                            637 ;src/monkey1.c:188: for(i=0;i<cicles;i++) HALT;
   025E 01 00 00      [10]  638 	ld	bc, #0x0000
   0261                     639 00103$:
   0261 21 02 00      [10]  640 	ld	hl, #2
   0264 39            [11]  641 	add	hl, sp
   0265 79            [ 4]  642 	ld	a, c
   0266 96            [ 7]  643 	sub	a, (hl)
   0267 78            [ 4]  644 	ld	a, b
   0268 23            [ 6]  645 	inc	hl
   0269 9E            [ 7]  646 	sbc	a, (hl)
   026A D0            [11]  647 	ret	NC
   026B 76            [ 4]  648 	halt	
   026C 03            [ 6]  649 	inc	bc
                            650 ;src/monkey1.c:189: }
   026D 18 F2         [12]  651 	jr	00103$
                            652 ;src/monkey1.c:192: void CLS()
                            653 ;	---------------------------------
                            654 ; Function CLS
                            655 ; ---------------------------------
   026F                     656 _CLS::
                            657 ;src/monkey1.c:194: FillVRAM (BASE5, 0x300, 32);
   026F 3E 20         [ 7]  658 	ld	a, #0x20
   0271 F5            [11]  659 	push	af
   0272 33            [ 6]  660 	inc	sp
   0273 21 00 03      [10]  661 	ld	hl, #0x0300
   0276 E5            [11]  662 	push	hl
   0277 26 18         [ 7]  663 	ld	h, #0x18
   0279 E5            [11]  664 	push	hl
   027A CDr91r03      [17]  665 	call	_FillVRAM
   027D F1            [10]  666 	pop	af
   027E F1            [10]  667 	pop	af
   027F 33            [ 6]  668 	inc	sp
                            669 ;src/monkey1.c:195: }
   0280 C9            [10]  670 	ret
                            671 ;src/monkey1.c:199: void VPRINT(byte column, byte line, char* text)
                            672 ;	---------------------------------
                            673 ; Function VPRINT
                            674 ; ---------------------------------
   0281                     675 _VPRINT::
   0281 DD E5         [15]  676 	push	ix
   0283 DD 21 00 00   [14]  677 	ld	ix,#0
   0287 DD 39         [15]  678 	add	ix,sp
                            679 ;src/monkey1.c:201: uint vaddr = BASE5 + (line*32)+column; // calcula la posicion en la VRAM
   0289 DD 6E 05      [19]  680 	ld	l, 5 (ix)
   028C 26 00         [ 7]  681 	ld	h, #0x00
   028E 29            [11]  682 	add	hl, hl
   028F 29            [11]  683 	add	hl, hl
   0290 29            [11]  684 	add	hl, hl
   0291 29            [11]  685 	add	hl, hl
   0292 29            [11]  686 	add	hl, hl
   0293 01 00 18      [10]  687 	ld	bc, #0x1800
   0296 09            [11]  688 	add	hl, bc
   0297 DD 4E 04      [19]  689 	ld	c, 4 (ix)
   029A 06 00         [ 7]  690 	ld	b, #0x00
   029C 09            [11]  691 	add	hl, bc
                            692 ;src/monkey1.c:202: VPOKEARRAY(vaddr, text);
   029D DD 4E 06      [19]  693 	ld	c, 6 (ix)
   02A0 DD 46 07      [19]  694 	ld	b, 7 (ix)
   02A3 C5            [11]  695 	push	bc
   02A4 E5            [11]  696 	push	hl
   02A5 CDrADr02      [17]  697 	call	_VPOKEARRAY
   02A8 F1            [10]  698 	pop	af
   02A9 F1            [10]  699 	pop	af
                            700 ;src/monkey1.c:203: }
   02AA DD E1         [14]  701 	pop	ix
   02AC C9            [10]  702 	ret
                            703 ;src/monkey1.c:207: void VPOKEARRAY(uint vaddr, char* text)
                            704 ;	---------------------------------
                            705 ; Function VPOKEARRAY
                            706 ; ---------------------------------
   02AD                     707 _VPOKEARRAY::
   02AD DD E5         [15]  708 	push	ix
   02AF DD 21 00 00   [14]  709 	ld	ix,#0
   02B3 DD 39         [15]  710 	add	ix,sp
   02B5 F5            [11]  711 	push	af
                            712 ;src/monkey1.c:209: while(*(text)) VPOKE(vaddr++,*(text++));
   02B6 DD 4E 06      [19]  713 	ld	c, 6 (ix)
   02B9 DD 46 07      [19]  714 	ld	b, 7 (ix)
   02BC DD 5E 04      [19]  715 	ld	e, 4 (ix)
   02BF DD 56 05      [19]  716 	ld	d, 5 (ix)
   02C2                     717 00101$:
   02C2 0A            [ 7]  718 	ld	a, (bc)
   02C3 B7            [ 4]  719 	or	a, a
   02C4 28 20         [12]  720 	jr	Z,00104$
   02C6 67            [ 4]  721 	ld	h, a
   02C7 03            [ 6]  722 	inc	bc
   02C8 33            [ 6]  723 	inc	sp
   02C9 33            [ 6]  724 	inc	sp
   02CA D5            [11]  725 	push	de
   02CB 13            [ 6]  726 	inc	de
   02CC DD 73 04      [19]  727 	ld	4 (ix), e
   02CF DD 72 05      [19]  728 	ld	5 (ix), d
   02D2 C5            [11]  729 	push	bc
   02D3 D5            [11]  730 	push	de
   02D4 E5            [11]  731 	push	hl
   02D5 33            [ 6]  732 	inc	sp
   02D6 DD 6E FE      [19]  733 	ld	l, -2 (ix)
   02D9 DD 66 FF      [19]  734 	ld	h, -1 (ix)
   02DC E5            [11]  735 	push	hl
   02DD CDr65r03      [17]  736 	call	_VPOKE
   02E0 F1            [10]  737 	pop	af
   02E1 33            [ 6]  738 	inc	sp
   02E2 D1            [10]  739 	pop	de
   02E3 C1            [10]  740 	pop	bc
   02E4 18 DC         [12]  741 	jr	00101$
   02E6                     742 00104$:
                            743 ;src/monkey1.c:210: }
   02E6 DD F9         [10]  744 	ld	sp, ix
   02E8 DD E1         [14]  745 	pop	ix
   02EA C9            [10]  746 	ret
                            747 ;src/monkey1.c:220: void LOCATE(char x, char y) __naked
                            748 ;	---------------------------------
                            749 ; Function LOCATE
                            750 ; ---------------------------------
   02EB                     751 _LOCATE::
                            752 ;src/monkey1.c:238: __endasm;
   02EB DD E5         [15]  753 	push	IX
   02ED DD 21 00 00   [14]  754 	ld	IX,#0
   02F1 DD 39         [15]  755 	add	IX,SP
   02F3 DD 7E 04      [19]  756 	ld	A,4(IX) ;x
   02F6 3C            [ 4]  757 	inc	A ;incrementa las posiciones para que se situen correctamente en la pantalla
   02F7 67            [ 4]  758 	ld	H,A
   02F8 DD 7E 05      [19]  759 	ld	A,5(IX) ;y
   02FB 3C            [ 4]  760 	inc	A
   02FC 6F            [ 4]  761 	ld	L,A
   02FD CD C6 00      [17]  762 	call	0x00C6
   0300 DD E1         [14]  763 	pop	IX
   0302 C9            [10]  764 	ret
                            765 ;src/monkey1.c:240: }
                            766 ;src/monkey1.c:247: void PRINT(char* text) __naked
                            767 ;	---------------------------------
                            768 ; Function PRINT
                            769 ; ---------------------------------
   0303                     770 _PRINT::
                            771 ;src/monkey1.c:269: __endasm; 
   0303 DD E5         [15]  772 	push	IX
   0305 DD 21 00 00   [14]  773 	ld	IX,#0
   0309 DD 39         [15]  774 	add	IX,SP
   030B DD 6E 04      [19]  775 	ld	L,4(ix)
   030E DD 66 05      [19]  776 	ld	H,5(ix)
   0311                     777 	nextCHAR:
   0311 7E            [ 7]  778 	ld	A,(HL)
   0312 B7            [ 4]  779 	or	A
   0313 28 06         [12]  780 	jr	Z,ENDnext
   0315 CD A2 00      [17]  781 	call	0x00A2
   0318 23            [ 6]  782 	inc	HL
   0319 18 F6         [12]  783 	jr	nextCHAR
   031B                     784 	ENDnext:
   031B DD E1         [14]  785 	pop	IX
   031D C9            [10]  786 	ret
                            787 ;src/monkey1.c:270: }
                            788 ;src/monkey1.c:275: char PEEK(uint address) __naked
                            789 ;	---------------------------------
                            790 ; Function PEEK
                            791 ; ---------------------------------
   031E                     792 _PEEK::
                            793 ;src/monkey1.c:290: __endasm;
   031E DD E5         [15]  794 	push	IX
   0320 DD 21 00 00   [14]  795 	ld	IX,#0
   0324 DD 39         [15]  796 	add	IX,SP
   0326 DD 6E 04      [19]  797 	ld	L,4(IX)
   0329 DD 66 05      [19]  798 	ld	H,5(IX)
   032C 6E            [ 7]  799 	ld	L,(HL)
   032D DD E1         [14]  800 	pop	IX
   032F C9            [10]  801 	ret
                            802 ;src/monkey1.c:291: }
                            803 ;src/monkey1.c:296: uint PEEKW(uint address) __naked
                            804 ;	---------------------------------
                            805 ; Function PEEKW
                            806 ; ---------------------------------
   0330                     807 _PEEKW::
                            808 ;src/monkey1.c:313: __endasm;
   0330 DD E5         [15]  809 	push	IX
   0332 DD 21 00 00   [14]  810 	ld	IX,#0
   0336 DD 39         [15]  811 	add	IX,SP
   0338 DD 6E 04      [19]  812 	ld	L,4(ix)
   033B DD 66 05      [19]  813 	ld	H,5(ix)
   033E 5E            [ 7]  814 	ld	E,(HL)
   033F 23            [ 6]  815 	inc	HL
   0340 56            [ 7]  816 	ld	D,(HL)
   0341 EB            [ 4]  817 	ex	DE,HL
   0342 DD E1         [14]  818 	pop	IX
   0344 C9            [10]  819 	ret
                            820 ;src/monkey1.c:314: }
                            821 ;src/monkey1.c:326: void COLOR(char ink, char background, char border) __naked
                            822 ;	---------------------------------
                            823 ; Function COLOR
                            824 ; ---------------------------------
   0345                     825 _COLOR::
                            826 ;src/monkey1.c:349: __endasm;
   0345 DD E5         [15]  827 	push	IX
   0347 DD 21 00 00   [14]  828 	ld	IX,#0
   034B DD 39         [15]  829 	add	IX,SP
   034D DD 7E 04      [19]  830 	ld	A,4(IX)
   0350 32 E9 F3      [13]  831 	ld	(0xF3E9),A
   0353 DD 7E 05      [19]  832 	ld	A,5(IX)
   0356 32 EA F3      [13]  833 	ld	(0xF3EA),A
   0359 DD 7E 06      [19]  834 	ld	A,6(IX)
   035C 32 EB F3      [13]  835 	ld	(0xF3EB),A
   035F CD 62 00      [17]  836 	call	0x0062
   0362 DD E1         [14]  837 	pop	IX
   0364 C9            [10]  838 	ret
                            839 ;src/monkey1.c:350: }
                            840 ;src/monkey1.c:361: void VPOKE(unsigned int vaddr, char value) __naked
                            841 ;	---------------------------------
                            842 ; Function VPOKE
                            843 ; ---------------------------------
   0365                     844 _VPOKE::
                            845 ;src/monkey1.c:379: __endasm;
   0365 DD E5         [15]  846 	push	IX
   0367 DD 21 00 00   [14]  847 	ld	IX,#0
   036B DD 39         [15]  848 	add	IX,SP
   036D DD 6E 04      [19]  849 	ld	L,4(IX)
   0370 DD 66 05      [19]  850 	ld	H,5(IX)
   0373 DD 7E 06      [19]  851 	ld	A,6(IX)
   0376 CD 4D 00      [17]  852 	call	0x004D
   0379 DD E1         [14]  853 	pop	IX
   037B C9            [10]  854 	ret
                            855 ;src/monkey1.c:380: }
                            856 ;src/monkey1.c:390: char VPEEK(unsigned int vaddr) __naked
                            857 ;	---------------------------------
                            858 ; Function VPEEK
                            859 ; ---------------------------------
   037C                     860 _VPEEK::
                            861 ;src/monkey1.c:407: __endasm;
   037C DD E5         [15]  862 	push	IX
   037E DD 21 00 00   [14]  863 	ld	IX,#0
   0382 DD 39         [15]  864 	add	IX,SP
   0384 DD 6E 04      [19]  865 	ld	L,4(IX)
   0387 DD 66 05      [19]  866 	ld	H,5(IX)
   038A CD 4A 00      [17]  867 	call	0x004A
   038D 6F            [ 4]  868 	ld	L,A
   038E DD E1         [14]  869 	pop	IX
   0390 C9            [10]  870 	ret
                            871 ;src/monkey1.c:408: }
                            872 ;src/monkey1.c:420: void FillVRAM(unsigned int vaddr, unsigned int length, char value) __naked
                            873 ;	---------------------------------
                            874 ; Function FillVRAM
                            875 ; ---------------------------------
   0391                     876 _FillVRAM::
                            877 ;src/monkey1.c:442: __endasm;
   0391 DD E5         [15]  878 	push	IX
   0393 DD 21 00 00   [14]  879 	ld	IX,#0
   0397 DD 39         [15]  880 	add	IX,SP
   0399 DD 6E 04      [19]  881 	ld	L,4(IX) ; vaddress
   039C DD 66 05      [19]  882 	ld	H,5(IX)
   039F DD 4E 06      [19]  883 	ld	C,6(IX) ;length
   03A2 DD 46 07      [19]  884 	ld	B,7(IX)
   03A5 DD 7E 08      [19]  885 	ld	A,8(IX) ;value
   03A8 CD 56 00      [17]  886 	call	0x0056
   03AB DD E1         [14]  887 	pop	IX
   03AD C9            [10]  888 	ret
                            889 ;src/monkey1.c:443: }
                            890 ;src/monkey1.c:455: void CopyToVRAM(unsigned int addr, unsigned int vaddr, unsigned int length) __naked
                            891 ;	---------------------------------
                            892 ; Function CopyToVRAM
                            893 ; ---------------------------------
   03AE                     894 _CopyToVRAM::
                            895 ;src/monkey1.c:478: __endasm;
   03AE DD E5         [15]  896 	push	IX
   03B0 DD 21 00 00   [14]  897 	ld	IX,#0
   03B4 DD 39         [15]  898 	add	IX,SP
   03B6 DD 6E 04      [19]  899 	ld	L,4(IX) ;ram address
   03B9 DD 66 05      [19]  900 	ld	H,5(IX)
   03BC DD 5E 06      [19]  901 	ld	E,6(IX) ;VRAM address
   03BF DD 56 07      [19]  902 	ld	D,7(IX)
   03C2 DD 4E 08      [19]  903 	ld	C,8(IX) ;length
   03C5 DD 46 09      [19]  904 	ld	B,9(IX)
   03C8 CD 5C 00      [17]  905 	call	0x005C
   03CB DD E1         [14]  906 	pop	IX
   03CD C9            [10]  907 	ret
                            908 ;src/monkey1.c:479: }
                            909 ;src/monkey1.c:484: void setFont()
                            910 ;	---------------------------------
                            911 ; Function setFont
                            912 ; ---------------------------------
   03CE                     913 _setFont::
                            914 ;src/monkey1.c:486: uint ROMfont = PEEKW(CGTABL);
   03CE 21 04 00      [10]  915 	ld	hl, #0x0004
   03D1 E5            [11]  916 	push	hl
   03D2 CDr30r03      [17]  917 	call	_PEEKW
   03D5 F1            [10]  918 	pop	af
                            919 ;src/monkey1.c:488: CopyToVRAM(ROMfont,BASE7,0x800);       //MSX font pattern
   03D6 01 00 08      [10]  920 	ld	bc, #0x0800
   03D9 C5            [11]  921 	push	bc
   03DA 01 00 00      [10]  922 	ld	bc, #0x0000
   03DD C5            [11]  923 	push	bc
   03DE E5            [11]  924 	push	hl
   03DF CDrAEr03      [17]  925 	call	_CopyToVRAM
   03E2 21 06 00      [10]  926 	ld	hl, #6
   03E5 39            [11]  927 	add	hl, sp
   03E6 F9            [ 6]  928 	ld	sp, hl
                            929 ;src/monkey1.c:490: FillVRAM(BASE6,32,0xF4);           //colors
   03E7 3E F4         [ 7]  930 	ld	a, #0xf4
   03E9 F5            [11]  931 	push	af
   03EA 33            [ 6]  932 	inc	sp
   03EB 21 20 00      [10]  933 	ld	hl, #0x0020
   03EE E5            [11]  934 	push	hl
   03EF 21 00 20      [10]  935 	ld	hl, #0x2000
   03F2 E5            [11]  936 	push	hl
   03F3 CDr91r03      [17]  937 	call	_FillVRAM
   03F6 F1            [10]  938 	pop	af
   03F7 F1            [10]  939 	pop	af
   03F8 33            [ 6]  940 	inc	sp
                            941 ;src/monkey1.c:492: return;
                            942 ;src/monkey1.c:493: }
   03F9 C9            [10]  943 	ret
                            944 ;src/monkey1.c:499: void testSPRITES()
                            945 ;	---------------------------------
                            946 ; Function testSPRITES
                            947 ; ---------------------------------
   03FA                     948 _testSPRITES::
   03FA DD E5         [15]  949 	push	ix
   03FC DD 21 00 00   [14]  950 	ld	ix,#0
   0400 DD 39         [15]  951 	add	ix,sp
   0402 F5            [11]  952 	push	af
   0403 F5            [11]  953 	push	af
                            954 ;src/monkey1.c:504: char frame=0;
   0404 AF            [ 4]  955 	xor	a, a
   0405 DD 77 FC      [19]  956 	ld	-4 (ix), a
                            957 ;src/monkey1.c:511: VPRINT(0,cursorLine++, text01);
   0408 21r15r00      [10]  958 	ld	hl, #_text01
   040B E5            [11]  959 	push	hl
   040C AF            [ 4]  960 	xor	a, a
   040D F5            [11]  961 	push	af
   040E 33            [ 6]  962 	inc	sp
   040F AF            [ 4]  963 	xor	a, a
   0410 F5            [11]  964 	push	af
   0411 33            [ 6]  965 	inc	sp
   0412 CDr81r02      [17]  966 	call	_VPRINT
   0415 F1            [10]  967 	pop	af
                            968 ;src/monkey1.c:512: VPRINT(0,cursorLine++, text02);
   0416 21r2Er00      [10]  969 	ld	hl, #_text02
   0419 E3            [19]  970 	ex	(sp),hl
   041A 3E 01         [ 7]  971 	ld	a, #0x01
   041C F5            [11]  972 	push	af
   041D 33            [ 6]  973 	inc	sp
   041E AF            [ 4]  974 	xor	a, a
   041F F5            [11]  975 	push	af
   0420 33            [ 6]  976 	inc	sp
   0421 CDr81r02      [17]  977 	call	_VPRINT
   0424 F1            [10]  978 	pop	af
                            979 ;src/monkey1.c:516: VPRINT(0,cursorLine++, "-----------------Test Functions");
   0425 21r73r05      [10]  980 	ld	hl, #___str_2
   0428 E3            [19]  981 	ex	(sp),hl
   0429 3E 02         [ 7]  982 	ld	a, #0x02
   042B F5            [11]  983 	push	af
   042C 33            [ 6]  984 	inc	sp
   042D AF            [ 4]  985 	xor	a, a
   042E F5            [11]  986 	push	af
   042F 33            [ 6]  987 	inc	sp
   0430 CDr81r02      [17]  988 	call	_VPRINT
   0433 F1            [10]  989 	pop	af
                            990 ;src/monkey1.c:520: VPRINT(0,cursorLine++, "ShowMonkey(plane,x,y,color)"); 
   0434 21r93r05      [10]  991 	ld	hl, #___str_3
   0437 E3            [19]  992 	ex	(sp),hl
   0438 3E 03         [ 7]  993 	ld	a, #0x03
   043A F5            [11]  994 	push	af
   043B 33            [ 6]  995 	inc	sp
   043C AF            [ 4]  996 	xor	a, a
   043D F5            [11]  997 	push	af
   043E 33            [ 6]  998 	inc	sp
   043F CDr81r02      [17]  999 	call	_VPRINT
   0442 F1            [10] 1000 	pop	af
   0443 F1            [10] 1001 	pop	af
                           1002 ;src/monkey1.c:521: showSprites();
   0444 CDr0Fr06      [17] 1003 	call	_showSprites
                           1004 ;src/monkey1.c:522: WAIT(100);
   0447 21 64 00      [10] 1005 	ld	hl, #0x0064
   044A E5            [11] 1006 	push	hl
   044B CDr5Er02      [17] 1007 	call	_WAIT
                           1008 ;src/monkey1.c:525: VPRINT(0,cursorLine++, "UpdateMonkeyFrame(plane,frame)"); 
   044E 21rAFr05      [10] 1009 	ld	hl, #___str_4
   0451 E3            [19] 1010 	ex	(sp),hl
   0452 3E 04         [ 7] 1011 	ld	a, #0x04
   0454 F5            [11] 1012 	push	af
   0455 33            [ 6] 1013 	inc	sp
   0456 AF            [ 4] 1014 	xor	a, a
   0457 F5            [11] 1015 	push	af
   0458 33            [ 6] 1016 	inc	sp
   0459 CDr81r02      [17] 1017 	call	_VPRINT
   045C F1            [10] 1018 	pop	af
   045D F1            [10] 1019 	pop	af
                           1020 ;src/monkey1.c:526: for(i=0;i<20;i++)
   045E 01 00 00      [10] 1021 	ld	bc, #0x0000
   0461                    1022 00112$:
                           1023 ;src/monkey1.c:528: WAIT(16);
   0461 C5            [11] 1024 	push	bc
   0462 21 10 00      [10] 1025 	ld	hl, #0x0010
   0465 E5            [11] 1026 	push	hl
   0466 CDr5Er02      [17] 1027 	call	_WAIT
   0469 F1            [10] 1028 	pop	af
   046A C1            [10] 1029 	pop	bc
                           1030 ;src/monkey1.c:529: for(plane=0;plane<32;plane++) UpdateMonkeyFrame(plane,1);
   046B 16 00         [ 7] 1031 	ld	d, #0x00
   046D                    1032 00108$:
   046D C5            [11] 1033 	push	bc
   046E D5            [11] 1034 	push	de
   046F 3E 01         [ 7] 1035 	ld	a, #0x01
   0471 F5            [11] 1036 	push	af
   0472 33            [ 6] 1037 	inc	sp
   0473 D5            [11] 1038 	push	de
   0474 33            [ 6] 1039 	inc	sp
   0475 CDr00r00      [17] 1040 	call	_UpdateMonkeyFrame
   0478 F1            [10] 1041 	pop	af
   0479 D1            [10] 1042 	pop	de
   047A C1            [10] 1043 	pop	bc
   047B 14            [ 4] 1044 	inc	d
   047C 7A            [ 4] 1045 	ld	a, d
   047D D6 20         [ 7] 1046 	sub	a, #0x20
   047F 38 EC         [12] 1047 	jr	C,00108$
                           1048 ;src/monkey1.c:530: WAIT(16);
   0481 C5            [11] 1049 	push	bc
   0482 21 10 00      [10] 1050 	ld	hl, #0x0010
   0485 E5            [11] 1051 	push	hl
   0486 CDr5Er02      [17] 1052 	call	_WAIT
   0489 F1            [10] 1053 	pop	af
   048A C1            [10] 1054 	pop	bc
                           1055 ;src/monkey1.c:531: for(plane=0;plane<32;plane++) UpdateMonkeyFrame(plane,0);
   048B 16 00         [ 7] 1056 	ld	d, #0x00
   048D                    1057 00110$:
   048D C5            [11] 1058 	push	bc
   048E D5            [11] 1059 	push	de
   048F AF            [ 4] 1060 	xor	a, a
   0490 F5            [11] 1061 	push	af
   0491 33            [ 6] 1062 	inc	sp
   0492 D5            [11] 1063 	push	de
   0493 33            [ 6] 1064 	inc	sp
   0494 CDr00r00      [17] 1065 	call	_UpdateMonkeyFrame
   0497 F1            [10] 1066 	pop	af
   0498 D1            [10] 1067 	pop	de
   0499 C1            [10] 1068 	pop	bc
   049A 14            [ 4] 1069 	inc	d
   049B 7A            [ 4] 1070 	ld	a, d
   049C D6 20         [ 7] 1071 	sub	a, #0x20
   049E 38 ED         [12] 1072 	jr	C,00110$
                           1073 ;src/monkey1.c:526: for(i=0;i<20;i++)
   04A0 03            [ 6] 1074 	inc	bc
   04A1 79            [ 4] 1075 	ld	a, c
   04A2 D6 14         [ 7] 1076 	sub	a, #0x14
   04A4 78            [ 4] 1077 	ld	a, b
   04A5 DE 00         [ 7] 1078 	sbc	a, #0x00
   04A7 38 B8         [12] 1079 	jr	C,00112$
                           1080 ;src/monkey1.c:535: VPRINT(0,cursorLine++, "ClearMonkeys()");
   04A9 21rCEr05      [10] 1081 	ld	hl, #___str_5
   04AC E5            [11] 1082 	push	hl
   04AD 3E 05         [ 7] 1083 	ld	a, #0x05
   04AF F5            [11] 1084 	push	af
   04B0 33            [ 6] 1085 	inc	sp
   04B1 AF            [ 4] 1086 	xor	a, a
   04B2 F5            [11] 1087 	push	af
   04B3 33            [ 6] 1088 	inc	sp
   04B4 CDr81r02      [17] 1089 	call	_VPRINT
   04B7 F1            [10] 1090 	pop	af
   04B8 F1            [10] 1091 	pop	af
                           1092 ;src/monkey1.c:536: ClearMonkeys();
   04B9 CDr00r00      [17] 1093 	call	_ClearMonkeys
                           1094 ;src/monkey1.c:537: WAIT(100);
   04BC 21 64 00      [10] 1095 	ld	hl, #0x0064
   04BF E5            [11] 1096 	push	hl
   04C0 CDr5Er02      [17] 1097 	call	_WAIT
                           1098 ;src/monkey1.c:541: VPRINT(0,cursorLine++, "Monkeys Dancing");
   04C3 21rDDr05      [10] 1099 	ld	hl, #___str_6
   04C6 E3            [19] 1100 	ex	(sp),hl
   04C7 3E 06         [ 7] 1101 	ld	a, #0x06
   04C9 F5            [11] 1102 	push	af
   04CA 33            [ 6] 1103 	inc	sp
   04CB AF            [ 4] 1104 	xor	a, a
   04CC F5            [11] 1105 	push	af
   04CD 33            [ 6] 1106 	inc	sp
   04CE CDr81r02      [17] 1107 	call	_VPRINT
   04D1 F1            [10] 1108 	pop	af
   04D2 F1            [10] 1109 	pop	af
                           1110 ;src/monkey1.c:542: for(i=0;i<2048;i++)
   04D3 AF            [ 4] 1111 	xor	a, a
   04D4 DD 77 FD      [19] 1112 	ld	-3 (ix), a
   04D7 AF            [ 4] 1113 	xor	a, a
   04D8 DD 77 FE      [19] 1114 	ld	-2 (ix), a
   04DB DD 77 FF      [19] 1115 	ld	-1 (ix), a
   04DE                    1116 00116$:
                           1117 ;src/monkey1.c:544: HALT;    
   04DE 76            [ 4] 1118 	halt	
                           1119 ;src/monkey1.c:546: for(plane=0;plane<32;plane++)
   04DF DD 4E FC      [19] 1120 	ld	c, -4 (ix)
   04E2 CB 39         [ 8] 1121 	srl	c
   04E4 CB 39         [ 8] 1122 	srl	c
   04E6 CB 39         [ 8] 1123 	srl	c
   04E8 CB 39         [ 8] 1124 	srl	c
   04EA 06 00         [ 7] 1125 	ld	b, #0x00
   04EC                    1126 00114$:
                           1127 ;src/monkey1.c:548: posMonkey = grade + (plane*8);
   04EC 78            [ 4] 1128 	ld	a, b
   04ED 87            [ 4] 1129 	add	a, a
   04EE 87            [ 4] 1130 	add	a, a
   04EF 87            [ 4] 1131 	add	a, a
   04F0 DD 5E FD      [19] 1132 	ld	e, -3 (ix)
   04F3 83            [ 4] 1133 	add	a, e
   04F4 5F            [ 4] 1134 	ld	e, a
                           1135 ;src/monkey1.c:549: ShowMonkey(plane, posX[posMonkey], posY[posMonkey], 8);
   04F5 21r4Fr01      [10] 1136 	ld	hl, #_posY
   04F8 16 00         [ 7] 1137 	ld	d, #0x00
   04FA 19            [11] 1138 	add	hl, de
   04FB 56            [ 7] 1139 	ld	d, (hl)
   04FC 7B            [ 4] 1140 	ld	a, e
   04FD C6r4F         [ 7] 1141 	add	a, #<(_posX)
   04FF 6F            [ 4] 1142 	ld	l, a
   0500 3E 00         [ 7] 1143 	ld	a, #0x00
   0502 CEs00         [ 7] 1144 	adc	a, #>(_posX)
   0504 67            [ 4] 1145 	ld	h, a
   0505 5E            [ 7] 1146 	ld	e, (hl)
   0506 C5            [11] 1147 	push	bc
   0507 3E 08         [ 7] 1148 	ld	a, #0x08
   0509 F5            [11] 1149 	push	af
   050A 33            [ 6] 1150 	inc	sp
   050B D5            [11] 1151 	push	de
   050C C5            [11] 1152 	push	bc
   050D 33            [ 6] 1153 	inc	sp
   050E CDr00r00      [17] 1154 	call	_ShowMonkey
   0511 F1            [10] 1155 	pop	af
   0512 F1            [10] 1156 	pop	af
   0513 C1            [10] 1157 	pop	bc
                           1158 ;src/monkey1.c:551: UpdateMonkeyFrame(plane,frame>>4);           
   0514 C5            [11] 1159 	push	bc
   0515 79            [ 4] 1160 	ld	a, c
   0516 F5            [11] 1161 	push	af
   0517 33            [ 6] 1162 	inc	sp
   0518 C5            [11] 1163 	push	bc
   0519 33            [ 6] 1164 	inc	sp
   051A CDr00r00      [17] 1165 	call	_UpdateMonkeyFrame
   051D F1            [10] 1166 	pop	af
   051E C1            [10] 1167 	pop	bc
                           1168 ;src/monkey1.c:546: for(plane=0;plane<32;plane++)
   051F 04            [ 4] 1169 	inc	b
   0520 78            [ 4] 1170 	ld	a, b
   0521 D6 20         [ 7] 1171 	sub	a, #0x20
   0523 38 C7         [12] 1172 	jr	C,00114$
                           1173 ;src/monkey1.c:554: frame++;
   0525 DD 34 FC      [23] 1174 	inc	-4 (ix)
                           1175 ;src/monkey1.c:555: if (frame>31) frame = 0; 
   0528 3E 1F         [ 7] 1176 	ld	a, #0x1f
   052A DD 96 FC      [19] 1177 	sub	a, -4 (ix)
   052D 30 04         [12] 1178 	jr	NC,00106$
   052F AF            [ 4] 1179 	xor	a, a
   0530 DD 77 FC      [19] 1180 	ld	-4 (ix), a
   0533                    1181 00106$:
                           1182 ;src/monkey1.c:557: grade++;
   0533 DD 34 FD      [23] 1183 	inc	-3 (ix)
                           1184 ;src/monkey1.c:542: for(i=0;i<2048;i++)
   0536 DD 34 FE      [23] 1185 	inc	-2 (ix)
   0539 20 03         [12] 1186 	jr	NZ,00180$
   053B DD 34 FF      [23] 1187 	inc	-1 (ix)
   053E                    1188 00180$:
   053E DD 7E FF      [19] 1189 	ld	a, -1 (ix)
   0541 D6 08         [ 7] 1190 	sub	a, #0x08
   0543 38 99         [12] 1191 	jr	C,00116$
                           1192 ;src/monkey1.c:565: VPRINT(0,cursorLine, "Press any key.");
   0545 21rEDr05      [10] 1193 	ld	hl, #___str_7
   0548 E5            [11] 1194 	push	hl
   0549 3E 0A         [ 7] 1195 	ld	a, #0x0a
   054B F5            [11] 1196 	push	af
   054C 33            [ 6] 1197 	inc	sp
   054D AF            [ 4] 1198 	xor	a, a
   054E F5            [11] 1199 	push	af
   054F 33            [ 6] 1200 	inc	sp
   0550 CDr81r02      [17] 1201 	call	_VPRINT
   0553 F1            [10] 1202 	pop	af
   0554 F1            [10] 1203 	pop	af
                           1204 ;src/monkey1.c:566: LOCATE(14,cursorLine);
   0555 11 0E 0A      [10] 1205 	ld	de, #0x0a0e
   0558 D5            [11] 1206 	push	de
   0559 CDrEBr02      [17] 1207 	call	_LOCATE
   055C F1            [10] 1208 	pop	af
                           1209 ;src/monkey1.c:567: key = INKEY();
   055D CDr4Fr02      [17] 1210 	call	_INKEY
                           1211 ;src/monkey1.c:571: VPRINT(0,cursorLine,"End of the test...");
   0560 21rFCr05      [10] 1212 	ld	hl, #___str_8
   0563 E5            [11] 1213 	push	hl
   0564 3E 0C         [ 7] 1214 	ld	a, #0x0c
   0566 F5            [11] 1215 	push	af
   0567 33            [ 6] 1216 	inc	sp
   0568 AF            [ 4] 1217 	xor	a, a
   0569 F5            [11] 1218 	push	af
   056A 33            [ 6] 1219 	inc	sp
   056B CDr81r02      [17] 1220 	call	_VPRINT
                           1221 ;src/monkey1.c:573: }
   056E DD F9         [10] 1222 	ld	sp,ix
   0570 DD E1         [14] 1223 	pop	ix
   0572 C9            [10] 1224 	ret
   0573                    1225 ___str_2:
   0573 2D 2D 2D 2D 2D 2D  1226 	.ascii "-----------------Test Functions"
        2D 2D 2D 2D 2D 2D
        2D 2D 2D 2D 2D 54
        65 73 74 20 46 75
        6E 63 74 69 6F 6E
        73
   0592 00                 1227 	.db 0x00
   0593                    1228 ___str_3:
   0593 53 68 6F 77 4D 6F  1229 	.ascii "ShowMonkey(plane,x,y,color)"
        6E 6B 65 79 28 70
        6C 61 6E 65 2C 78
        2C 79 2C 63 6F 6C
        6F 72 29
   05AE 00                 1230 	.db 0x00
   05AF                    1231 ___str_4:
   05AF 55 70 64 61 74 65  1232 	.ascii "UpdateMonkeyFrame(plane,frame)"
        4D 6F 6E 6B 65 79
        46 72 61 6D 65 28
        70 6C 61 6E 65 2C
        66 72 61 6D 65 29
   05CD 00                 1233 	.db 0x00
   05CE                    1234 ___str_5:
   05CE 43 6C 65 61 72 4D  1235 	.ascii "ClearMonkeys()"
        6F 6E 6B 65 79 73
        28 29
   05DC 00                 1236 	.db 0x00
   05DD                    1237 ___str_6:
   05DD 4D 6F 6E 6B 65 79  1238 	.ascii "Monkeys Dancing"
        73 20 44 61 6E 63
        69 6E 67
   05EC 00                 1239 	.db 0x00
   05ED                    1240 ___str_7:
   05ED 50 72 65 73 73 20  1241 	.ascii "Press any key."
        61 6E 79 20 6B 65
        79 2E
   05FB 00                 1242 	.db 0x00
   05FC                    1243 ___str_8:
   05FC 45 6E 64 20 6F 66  1244 	.ascii "End of the test..."
        20 74 68 65 20 74
        65 73 74 2E 2E 2E
   060E 00                 1245 	.db 0x00
                           1246 ;src/monkey1.c:582: void showSprites()
                           1247 ;	---------------------------------
                           1248 ; Function showSprites
                           1249 ; ---------------------------------
   060F                    1250 _showSprites::
                           1251 ;src/monkey1.c:584: char x=0;
                           1252 ;src/monkey1.c:588: for(plane=0;plane<32;plane++)
   060F 01 00 00      [10] 1253 	ld	bc, #0x0000
   0612                    1254 00104$:
                           1255 ;src/monkey1.c:590: posY = (plane/4)*16;
   0612 68            [ 4] 1256 	ld	l, b
   0613 26 00         [ 7] 1257 	ld	h, #0x00
   0615 5D            [ 4] 1258 	ld	e, l
   0616 54            [ 4] 1259 	ld	d, h
   0617 CB 7C         [ 8] 1260 	bit	7, h
   0619 28 04         [12] 1261 	jr	Z,00108$
   061B EB            [ 4] 1262 	ex	de,hl
   061C 13            [ 6] 1263 	inc	de
   061D 13            [ 6] 1264 	inc	de
   061E 13            [ 6] 1265 	inc	de
   061F                    1266 00108$:
   061F CB 2A         [ 8] 1267 	sra	d
   0621 CB 1B         [ 8] 1268 	rr	e
   0623 CB 2A         [ 8] 1269 	sra	d
   0625 CB 1B         [ 8] 1270 	rr	e
   0627 7B            [ 4] 1271 	ld	a, e
   0628 87            [ 4] 1272 	add	a, a
   0629 87            [ 4] 1273 	add	a, a
   062A 87            [ 4] 1274 	add	a, a
   062B 87            [ 4] 1275 	add	a, a
                           1276 ;src/monkey1.c:591: posY += 48;
   062C C6 30         [ 7] 1277 	add	a, #0x30
   062E 67            [ 4] 1278 	ld	h, a
                           1279 ;src/monkey1.c:592: ShowMonkey(plane, x*16, posY, 8);
   062F 79            [ 4] 1280 	ld	a, c
   0630 87            [ 4] 1281 	add	a, a
   0631 87            [ 4] 1282 	add	a, a
   0632 87            [ 4] 1283 	add	a, a
   0633 87            [ 4] 1284 	add	a, a
   0634 57            [ 4] 1285 	ld	d, a
   0635 C5            [11] 1286 	push	bc
   0636 3E 08         [ 7] 1287 	ld	a, #0x08
   0638 F5            [11] 1288 	push	af
   0639 33            [ 6] 1289 	inc	sp
   063A 6A            [ 4] 1290 	ld	l, d
   063B E5            [11] 1291 	push	hl
   063C C5            [11] 1292 	push	bc
   063D 33            [ 6] 1293 	inc	sp
   063E CDr00r00      [17] 1294 	call	_ShowMonkey
   0641 F1            [10] 1295 	pop	af
   0642 F1            [10] 1296 	pop	af
   0643 C1            [10] 1297 	pop	bc
                           1298 ;src/monkey1.c:593: x++;
   0644 0C            [ 4] 1299 	inc	c
                           1300 ;src/monkey1.c:594: if (x>3) x=0;
   0645 3E 03         [ 7] 1301 	ld	a, #0x03
   0647 91            [ 4] 1302 	sub	a, c
   0648 30 02         [12] 1303 	jr	NC,00105$
   064A 0E 00         [ 7] 1304 	ld	c, #0x00
   064C                    1305 00105$:
                           1306 ;src/monkey1.c:588: for(plane=0;plane<32;plane++)
   064C 04            [ 4] 1307 	inc	b
   064D 78            [ 4] 1308 	ld	a, b
   064E D6 20         [ 7] 1309 	sub	a, #0x20
   0650 38 C0         [12] 1310 	jr	C,00104$
                           1311 ;src/monkey1.c:596: }
   0652 C9            [10] 1312 	ret
                           1313 	.area _CODE
                           1314 	.area _INITIALIZER
                           1315 	.area _CABS (ABS)
