                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.9.0 #11195 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module monkey1
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _UpdateMonkeyFrame
                             13 	.globl _ShowMonkey
                             14 	.globl _ClearMonkeys
                             15 	.globl _InitializeMonkeys
                             16 	.globl _posY
                             17 	.globl _posX
                             18 	.globl _sprcol
                             19 	.globl _text02
                             20 	.globl _text01
                             21 	.globl _INKEY
                             22 	.globl _WAIT
                             23 	.globl _CLS
                             24 	.globl _VPRINT
                             25 	.globl _VPOKEARRAY
                             26 	.globl _LOCATE
                             27 	.globl _PRINT
                             28 	.globl _PEEK
                             29 	.globl _PEEKW
                             30 	.globl _COLOR
                             31 	.globl _VPOKE
                             32 	.globl _VPEEK
                             33 	.globl _FillVRAM
                             34 	.globl _CopyToVRAM
                             35 	.globl _setFont
                             36 	.globl _testSPRITES
                             37 	.globl _showSprites
                             38 ;--------------------------------------------------------
                             39 ; special function registers
                             40 ;--------------------------------------------------------
                             41 ;--------------------------------------------------------
                             42 ; ram data
                             43 ;--------------------------------------------------------
                             44 	.area _DATA
                             45 ;--------------------------------------------------------
                             46 ; ram data
                             47 ;--------------------------------------------------------
                             48 	.area _INITIALIZED
                             49 ;--------------------------------------------------------
                             50 ; absolute external ram data
                             51 ;--------------------------------------------------------
                             52 	.area _DABS (ABS)
                             53 ;--------------------------------------------------------
                             54 ; global & static initialisations
                             55 ;--------------------------------------------------------
                             56 	.area _HOME
                             57 	.area _GSINIT
                             58 	.area _GSFINAL
                             59 	.area _GSINIT
                             60 ;--------------------------------------------------------
                             61 ; Home
                             62 ;--------------------------------------------------------
                             63 	.area _HOME
                             64 	.area _HOME
                             65 ;--------------------------------------------------------
                             66 ; code
                             67 ;--------------------------------------------------------
                             68 	.area _CODE
                             69 ;src\monkey1.c:121: void main(void)
                             70 ;	---------------------------------
                             71 ; Function main
                             72 ; ---------------------------------
   0000                      73 _main::
                             74 ;src\monkey1.c:125: InitializeMonkeys();
   0000 CDr00r00      [17]   75 	call	_InitializeMonkeys
                             76 ;src\monkey1.c:131: __endasm;
   0003 21 B0 F3      [10]   77 	ld	HL,#0xF3B0 ;0xF3B0 system variable
   0006 3E 20         [ 7]   78 	ld	A,#32
   0008 77            [ 7]   79 	ld	(HL),A ;WIDTH(32)
                             80 ;src\monkey1.c:134: testSPRITES();
   0009 CDrF2r03      [17]   81 	call	_testSPRITES
                             82 ;src\monkey1.c:144: WAIT(30*10);
   000C 21 2C 01      [10]   83 	ld	hl, #0x012c
   000F E5            [11]   84 	push	hl
   0010 CDr5Er02      [17]   85 	call	_WAIT
   0013 F1            [10]   86 	pop	af
                             87 ;src\monkey1.c:158: }
   0014 C9            [10]   88 	ret
   0015                      89 _text01:
   0015 4D 6F 6E 6B 65 79    90 	.ascii "Monkey Library Test1 ROM"
        20 4C 69 62 72 61
        72 79 20 54 65 73
        74 31 20 52 4F 4D
   002D 00                   91 	.db 0x00
   002E                      92 _text02:
   002E 20 20 20 20 76 31    93 	.ascii "    v1.0 (05/April/2021)"
        2E 30 20 28 30 35
        2F 41 70 72 69 6C
        2F 32 30 32 31 29
   0046 00                   94 	.db 0x00
   0047                      95 _sprcol:
   0047 0C                   96 	.db #0x0c	; 12
   0048 02                   97 	.db #0x02	; 2
   0049 03                   98 	.db #0x03	; 3
   004A 07                   99 	.db #0x07	; 7
   004B 06                  100 	.db #0x06	; 6
   004C 08                  101 	.db #0x08	; 8
   004D 09                  102 	.db #0x09	; 9
   004E 0E                  103 	.db #0x0e	; 14
   004F                     104 _posX:
   004F F0                  105 	.db #0xf0	; 240
   0050 F0                  106 	.db #0xf0	; 240
   0051 F0                  107 	.db #0xf0	; 240
   0052 F0                  108 	.db #0xf0	; 240
   0053 EF                  109 	.db #0xef	; 239
   0054 EF                  110 	.db #0xef	; 239
   0055 EF                  111 	.db #0xef	; 239
   0056 EE                  112 	.db #0xee	; 238
   0057 EE                  113 	.db #0xee	; 238
   0058 ED                  114 	.db #0xed	; 237
   0059 EC                  115 	.db #0xec	; 236
   005A EC                  116 	.db #0xec	; 236
   005B EB                  117 	.db #0xeb	; 235
   005C EA                  118 	.db #0xea	; 234
   005D E9                  119 	.db #0xe9	; 233
   005E E8                  120 	.db #0xe8	; 232
   005F E7                  121 	.db #0xe7	; 231
   0060 E6                  122 	.db #0xe6	; 230
   0061 E4                  123 	.db #0xe4	; 228
   0062 E3                  124 	.db #0xe3	; 227
   0063 E2                  125 	.db #0xe2	; 226
   0064 E0                  126 	.db #0xe0	; 224
   0065 DF                  127 	.db #0xdf	; 223
   0066 DD                  128 	.db #0xdd	; 221
   0067 DC                  129 	.db #0xdc	; 220
   0068 DA                  130 	.db #0xda	; 218
   0069 D8                  131 	.db #0xd8	; 216
   006A D6                  132 	.db #0xd6	; 214
   006B D5                  133 	.db #0xd5	; 213
   006C D3                  134 	.db #0xd3	; 211
   006D D1                  135 	.db #0xd1	; 209
   006E CF                  136 	.db #0xcf	; 207
   006F CD                  137 	.db #0xcd	; 205
   0070 CA                  138 	.db #0xca	; 202
   0071 C8                  139 	.db #0xc8	; 200
   0072 C6                  140 	.db #0xc6	; 198
   0073 C4                  141 	.db #0xc4	; 196
   0074 C1                  142 	.db #0xc1	; 193
   0075 BF                  143 	.db #0xbf	; 191
   0076 BD                  144 	.db #0xbd	; 189
   0077 BA                  145 	.db #0xba	; 186
   0078 B8                  146 	.db #0xb8	; 184
   0079 B5                  147 	.db #0xb5	; 181
   007A B3                  148 	.db #0xb3	; 179
   007B B0                  149 	.db #0xb0	; 176
   007C AD                  150 	.db #0xad	; 173
   007D AB                  151 	.db #0xab	; 171
   007E A8                  152 	.db #0xa8	; 168
   007F A5                  153 	.db #0xa5	; 165
   0080 A3                  154 	.db #0xa3	; 163
   0081 A0                  155 	.db #0xa0	; 160
   0082 9D                  156 	.db #0x9d	; 157
   0083 9A                  157 	.db #0x9a	; 154
   0084 97                  158 	.db #0x97	; 151
   0085 95                  159 	.db #0x95	; 149
   0086 92                  160 	.db #0x92	; 146
   0087 8F                  161 	.db #0x8f	; 143
   0088 8C                  162 	.db #0x8c	; 140
   0089 89                  163 	.db #0x89	; 137
   008A 86                  164 	.db #0x86	; 134
   008B 83                  165 	.db #0x83	; 131
   008C 80                  166 	.db #0x80	; 128
   008D 7D                  167 	.db #0x7d	; 125
   008E 7A                  168 	.db #0x7a	; 122	'z'
   008F 77                  169 	.db #0x77	; 119	'w'
   0090 74                  170 	.db #0x74	; 116	't'
   0091 71                  171 	.db #0x71	; 113	'q'
   0092 6E                  172 	.db #0x6e	; 110	'n'
   0093 6B                  173 	.db #0x6b	; 107	'k'
   0094 69                  174 	.db #0x69	; 105	'i'
   0095 66                  175 	.db #0x66	; 102	'f'
   0096 63                  176 	.db #0x63	; 99	'c'
   0097 60                  177 	.db #0x60	; 96
   0098 5D                  178 	.db #0x5d	; 93
   0099 5A                  179 	.db #0x5a	; 90	'Z'
   009A 57                  180 	.db #0x57	; 87	'W'
   009B 54                  181 	.db #0x54	; 84	'T'
   009C 52                  182 	.db #0x52	; 82	'R'
   009D 4F                  183 	.db #0x4f	; 79	'O'
   009E 4C                  184 	.db #0x4c	; 76	'L'
   009F 49                  185 	.db #0x49	; 73	'I'
   00A0 47                  186 	.db #0x47	; 71	'G'
   00A1 44                  187 	.db #0x44	; 68	'D'
   00A2 41                  188 	.db #0x41	; 65	'A'
   00A3 3F                  189 	.db #0x3f	; 63
   00A4 3C                  190 	.db #0x3c	; 60
   00A5 39                  191 	.db #0x39	; 57	'9'
   00A6 37                  192 	.db #0x37	; 55	'7'
   00A7 34                  193 	.db #0x34	; 52	'4'
   00A8 32                  194 	.db #0x32	; 50	'2'
   00A9 30                  195 	.db #0x30	; 48	'0'
   00AA 2D                  196 	.db #0x2d	; 45
   00AB 2B                  197 	.db #0x2b	; 43
   00AC 29                  198 	.db #0x29	; 41
   00AD 27                  199 	.db #0x27	; 39
   00AE 24                  200 	.db #0x24	; 36
   00AF 22                  201 	.db #0x22	; 34
   00B0 20                  202 	.db #0x20	; 32
   00B1 1E                  203 	.db #0x1e	; 30
   00B2 1C                  204 	.db #0x1c	; 28
   00B3 1B                  205 	.db #0x1b	; 27
   00B4 19                  206 	.db #0x19	; 25
   00B5 17                  207 	.db #0x17	; 23
   00B6 15                  208 	.db #0x15	; 21
   00B7 14                  209 	.db #0x14	; 20
   00B8 12                  210 	.db #0x12	; 18
   00B9 10                  211 	.db #0x10	; 16
   00BA 0F                  212 	.db #0x0f	; 15
   00BB 0E                  213 	.db #0x0e	; 14
   00BC 0C                  214 	.db #0x0c	; 12
   00BD 0B                  215 	.db #0x0b	; 11
   00BE 0A                  216 	.db #0x0a	; 10
   00BF 09                  217 	.db #0x09	; 9
   00C0 08                  218 	.db #0x08	; 8
   00C1 07                  219 	.db #0x07	; 7
   00C2 06                  220 	.db #0x06	; 6
   00C3 05                  221 	.db #0x05	; 5
   00C4 04                  222 	.db #0x04	; 4
   00C5 03                  223 	.db #0x03	; 3
   00C6 03                  224 	.db #0x03	; 3
   00C7 02                  225 	.db #0x02	; 2
   00C8 02                  226 	.db #0x02	; 2
   00C9 01                  227 	.db #0x01	; 1
   00CA 01                  228 	.db #0x01	; 1
   00CB 00                  229 	.db #0x00	; 0
   00CC 00                  230 	.db #0x00	; 0
   00CD 00                  231 	.db #0x00	; 0
   00CE 00                  232 	.db #0x00	; 0
   00CF 00                  233 	.db #0x00	; 0
   00D0 00                  234 	.db #0x00	; 0
   00D1 00                  235 	.db #0x00	; 0
   00D2 00                  236 	.db #0x00	; 0
   00D3 01                  237 	.db #0x01	; 1
   00D4 01                  238 	.db #0x01	; 1
   00D5 02                  239 	.db #0x02	; 2
   00D6 02                  240 	.db #0x02	; 2
   00D7 03                  241 	.db #0x03	; 3
   00D8 03                  242 	.db #0x03	; 3
   00D9 04                  243 	.db #0x04	; 4
   00DA 05                  244 	.db #0x05	; 5
   00DB 06                  245 	.db #0x06	; 6
   00DC 07                  246 	.db #0x07	; 7
   00DD 08                  247 	.db #0x08	; 8
   00DE 09                  248 	.db #0x09	; 9
   00DF 0A                  249 	.db #0x0a	; 10
   00E0 0B                  250 	.db #0x0b	; 11
   00E1 0C                  251 	.db #0x0c	; 12
   00E2 0E                  252 	.db #0x0e	; 14
   00E3 0F                  253 	.db #0x0f	; 15
   00E4 10                  254 	.db #0x10	; 16
   00E5 12                  255 	.db #0x12	; 18
   00E6 14                  256 	.db #0x14	; 20
   00E7 15                  257 	.db #0x15	; 21
   00E8 17                  258 	.db #0x17	; 23
   00E9 19                  259 	.db #0x19	; 25
   00EA 1B                  260 	.db #0x1b	; 27
   00EB 1C                  261 	.db #0x1c	; 28
   00EC 1E                  262 	.db #0x1e	; 30
   00ED 20                  263 	.db #0x20	; 32
   00EE 22                  264 	.db #0x22	; 34
   00EF 24                  265 	.db #0x24	; 36
   00F0 27                  266 	.db #0x27	; 39
   00F1 29                  267 	.db #0x29	; 41
   00F2 2B                  268 	.db #0x2b	; 43
   00F3 2D                  269 	.db #0x2d	; 45
   00F4 30                  270 	.db #0x30	; 48	'0'
   00F5 32                  271 	.db #0x32	; 50	'2'
   00F6 34                  272 	.db #0x34	; 52	'4'
   00F7 37                  273 	.db #0x37	; 55	'7'
   00F8 39                  274 	.db #0x39	; 57	'9'
   00F9 3C                  275 	.db #0x3c	; 60
   00FA 3F                  276 	.db #0x3f	; 63
   00FB 41                  277 	.db #0x41	; 65	'A'
   00FC 44                  278 	.db #0x44	; 68	'D'
   00FD 47                  279 	.db #0x47	; 71	'G'
   00FE 49                  280 	.db #0x49	; 73	'I'
   00FF 4C                  281 	.db #0x4c	; 76	'L'
   0100 4F                  282 	.db #0x4f	; 79	'O'
   0101 52                  283 	.db #0x52	; 82	'R'
   0102 54                  284 	.db #0x54	; 84	'T'
   0103 57                  285 	.db #0x57	; 87	'W'
   0104 5A                  286 	.db #0x5a	; 90	'Z'
   0105 5D                  287 	.db #0x5d	; 93
   0106 60                  288 	.db #0x60	; 96
   0107 63                  289 	.db #0x63	; 99	'c'
   0108 66                  290 	.db #0x66	; 102	'f'
   0109 69                  291 	.db #0x69	; 105	'i'
   010A 6B                  292 	.db #0x6b	; 107	'k'
   010B 6E                  293 	.db #0x6e	; 110	'n'
   010C 71                  294 	.db #0x71	; 113	'q'
   010D 74                  295 	.db #0x74	; 116	't'
   010E 77                  296 	.db #0x77	; 119	'w'
   010F 7A                  297 	.db #0x7a	; 122	'z'
   0110 7D                  298 	.db #0x7d	; 125
   0111 80                  299 	.db #0x80	; 128
   0112 83                  300 	.db #0x83	; 131
   0113 86                  301 	.db #0x86	; 134
   0114 89                  302 	.db #0x89	; 137
   0115 8C                  303 	.db #0x8c	; 140
   0116 8F                  304 	.db #0x8f	; 143
   0117 92                  305 	.db #0x92	; 146
   0118 95                  306 	.db #0x95	; 149
   0119 97                  307 	.db #0x97	; 151
   011A 9A                  308 	.db #0x9a	; 154
   011B 9D                  309 	.db #0x9d	; 157
   011C A0                  310 	.db #0xa0	; 160
   011D A3                  311 	.db #0xa3	; 163
   011E A5                  312 	.db #0xa5	; 165
   011F A8                  313 	.db #0xa8	; 168
   0120 AB                  314 	.db #0xab	; 171
   0121 AD                  315 	.db #0xad	; 173
   0122 B0                  316 	.db #0xb0	; 176
   0123 B3                  317 	.db #0xb3	; 179
   0124 B5                  318 	.db #0xb5	; 181
   0125 B8                  319 	.db #0xb8	; 184
   0126 BA                  320 	.db #0xba	; 186
   0127 BD                  321 	.db #0xbd	; 189
   0128 BF                  322 	.db #0xbf	; 191
   0129 C1                  323 	.db #0xc1	; 193
   012A C4                  324 	.db #0xc4	; 196
   012B C6                  325 	.db #0xc6	; 198
   012C C8                  326 	.db #0xc8	; 200
   012D CA                  327 	.db #0xca	; 202
   012E CD                  328 	.db #0xcd	; 205
   012F CF                  329 	.db #0xcf	; 207
   0130 D1                  330 	.db #0xd1	; 209
   0131 D3                  331 	.db #0xd3	; 211
   0132 D5                  332 	.db #0xd5	; 213
   0133 D6                  333 	.db #0xd6	; 214
   0134 D8                  334 	.db #0xd8	; 216
   0135 DA                  335 	.db #0xda	; 218
   0136 DC                  336 	.db #0xdc	; 220
   0137 DD                  337 	.db #0xdd	; 221
   0138 DF                  338 	.db #0xdf	; 223
   0139 E0                  339 	.db #0xe0	; 224
   013A E2                  340 	.db #0xe2	; 226
   013B E3                  341 	.db #0xe3	; 227
   013C E4                  342 	.db #0xe4	; 228
   013D E6                  343 	.db #0xe6	; 230
   013E E7                  344 	.db #0xe7	; 231
   013F E8                  345 	.db #0xe8	; 232
   0140 E9                  346 	.db #0xe9	; 233
   0141 EA                  347 	.db #0xea	; 234
   0142 EB                  348 	.db #0xeb	; 235
   0143 EC                  349 	.db #0xec	; 236
   0144 EC                  350 	.db #0xec	; 236
   0145 ED                  351 	.db #0xed	; 237
   0146 EE                  352 	.db #0xee	; 238
   0147 EE                  353 	.db #0xee	; 238
   0148 EF                  354 	.db #0xef	; 239
   0149 EF                  355 	.db #0xef	; 239
   014A EF                  356 	.db #0xef	; 239
   014B F0                  357 	.db #0xf0	; 240
   014C F0                  358 	.db #0xf0	; 240
   014D F0                  359 	.db #0xf0	; 240
   014E F0                  360 	.db #0xf0	; 240
   014F                     361 _posY:
   014F 58                  362 	.db #0x58	; 88	'X'
   0150 5A                  363 	.db #0x5a	; 90	'Z'
   0151 5C                  364 	.db #0x5c	; 92
   0152 5E                  365 	.db #0x5e	; 94
   0153 61                  366 	.db #0x61	; 97	'a'
   0154 63                  367 	.db #0x63	; 99	'c'
   0155 65                  368 	.db #0x65	; 101	'e'
   0156 67                  369 	.db #0x67	; 103	'g'
   0157 69                  370 	.db #0x69	; 105	'i'
   0158 6B                  371 	.db #0x6b	; 107	'k'
   0159 6D                  372 	.db #0x6d	; 109	'm'
   015A 70                  373 	.db #0x70	; 112	'p'
   015B 72                  374 	.db #0x72	; 114	'r'
   015C 74                  375 	.db #0x74	; 116	't'
   015D 76                  376 	.db #0x76	; 118	'v'
   015E 78                  377 	.db #0x78	; 120	'x'
   015F 7A                  378 	.db #0x7a	; 122	'z'
   0160 7C                  379 	.db #0x7c	; 124
   0161 7E                  380 	.db #0x7e	; 126
   0162 80                  381 	.db #0x80	; 128
   0163 82                  382 	.db #0x82	; 130
   0164 84                  383 	.db #0x84	; 132
   0165 85                  384 	.db #0x85	; 133
   0166 87                  385 	.db #0x87	; 135
   0167 89                  386 	.db #0x89	; 137
   0168 8B                  387 	.db #0x8b	; 139
   0169 8D                  388 	.db #0x8d	; 141
   016A 8E                  389 	.db #0x8e	; 142
   016B 90                  390 	.db #0x90	; 144
   016C 92                  391 	.db #0x92	; 146
   016D 93                  392 	.db #0x93	; 147
   016E 95                  393 	.db #0x95	; 149
   016F 96                  394 	.db #0x96	; 150
   0170 98                  395 	.db #0x98	; 152
   0171 99                  396 	.db #0x99	; 153
   0172 9B                  397 	.db #0x9b	; 155
   0173 9C                  398 	.db #0x9c	; 156
   0174 9E                  399 	.db #0x9e	; 158
   0175 9F                  400 	.db #0x9f	; 159
   0176 A0                  401 	.db #0xa0	; 160
   0177 A1                  402 	.db #0xa1	; 161
   0178 A3                  403 	.db #0xa3	; 163
   0179 A4                  404 	.db #0xa4	; 164
   017A A5                  405 	.db #0xa5	; 165
   017B A6                  406 	.db #0xa6	; 166
   017C A7                  407 	.db #0xa7	; 167
   017D A8                  408 	.db #0xa8	; 168
   017E A9                  409 	.db #0xa9	; 169
   017F A9                  410 	.db #0xa9	; 169
   0180 AA                  411 	.db #0xaa	; 170
   0181 AB                  412 	.db #0xab	; 171
   0182 AC                  413 	.db #0xac	; 172
   0183 AC                  414 	.db #0xac	; 172
   0184 AD                  415 	.db #0xad	; 173
   0185 AD                  416 	.db #0xad	; 173
   0186 AE                  417 	.db #0xae	; 174
   0187 AE                  418 	.db #0xae	; 174
   0188 AF                  419 	.db #0xaf	; 175
   0189 AF                  420 	.db #0xaf	; 175
   018A AF                  421 	.db #0xaf	; 175
   018B B0                  422 	.db #0xb0	; 176
   018C B0                  423 	.db #0xb0	; 176
   018D B0                  424 	.db #0xb0	; 176
   018E B0                  425 	.db #0xb0	; 176
   018F B0                  426 	.db #0xb0	; 176
   0190 B0                  427 	.db #0xb0	; 176
   0191 B0                  428 	.db #0xb0	; 176
   0192 B0                  429 	.db #0xb0	; 176
   0193 B0                  430 	.db #0xb0	; 176
   0194 AF                  431 	.db #0xaf	; 175
   0195 AF                  432 	.db #0xaf	; 175
   0196 AF                  433 	.db #0xaf	; 175
   0197 AE                  434 	.db #0xae	; 174
   0198 AE                  435 	.db #0xae	; 174
   0199 AD                  436 	.db #0xad	; 173
   019A AD                  437 	.db #0xad	; 173
   019B AC                  438 	.db #0xac	; 172
   019C AB                  439 	.db #0xab	; 171
   019D AB                  440 	.db #0xab	; 171
   019E AA                  441 	.db #0xaa	; 170
   019F A9                  442 	.db #0xa9	; 169
   01A0 A8                  443 	.db #0xa8	; 168
   01A1 A7                  444 	.db #0xa7	; 167
   01A2 A6                  445 	.db #0xa6	; 166
   01A3 A5                  446 	.db #0xa5	; 165
   01A4 A4                  447 	.db #0xa4	; 164
   01A5 A3                  448 	.db #0xa3	; 163
   01A6 A2                  449 	.db #0xa2	; 162
   01A7 A1                  450 	.db #0xa1	; 161
   01A8 A0                  451 	.db #0xa0	; 160
   01A9 9E                  452 	.db #0x9e	; 158
   01AA 9D                  453 	.db #0x9d	; 157
   01AB 9C                  454 	.db #0x9c	; 156
   01AC 9A                  455 	.db #0x9a	; 154
   01AD 99                  456 	.db #0x99	; 153
   01AE 97                  457 	.db #0x97	; 151
   01AF 96                  458 	.db #0x96	; 150
   01B0 94                  459 	.db #0x94	; 148
   01B1 92                  460 	.db #0x92	; 146
   01B2 91                  461 	.db #0x91	; 145
   01B3 8F                  462 	.db #0x8f	; 143
   01B4 8D                  463 	.db #0x8d	; 141
   01B5 8C                  464 	.db #0x8c	; 140
   01B6 8A                  465 	.db #0x8a	; 138
   01B7 88                  466 	.db #0x88	; 136
   01B8 86                  467 	.db #0x86	; 134
   01B9 84                  468 	.db #0x84	; 132
   01BA 83                  469 	.db #0x83	; 131
   01BB 81                  470 	.db #0x81	; 129
   01BC 7F                  471 	.db #0x7f	; 127
   01BD 7D                  472 	.db #0x7d	; 125
   01BE 7B                  473 	.db #0x7b	; 123
   01BF 79                  474 	.db #0x79	; 121	'y'
   01C0 77                  475 	.db #0x77	; 119	'w'
   01C1 75                  476 	.db #0x75	; 117	'u'
   01C2 73                  477 	.db #0x73	; 115	's'
   01C3 71                  478 	.db #0x71	; 113	'q'
   01C4 6F                  479 	.db #0x6f	; 111	'o'
   01C5 6C                  480 	.db #0x6c	; 108	'l'
   01C6 6A                  481 	.db #0x6a	; 106	'j'
   01C7 68                  482 	.db #0x68	; 104	'h'
   01C8 66                  483 	.db #0x66	; 102	'f'
   01C9 64                  484 	.db #0x64	; 100	'd'
   01CA 62                  485 	.db #0x62	; 98	'b'
   01CB 60                  486 	.db #0x60	; 96
   01CC 5D                  487 	.db #0x5d	; 93
   01CD 5B                  488 	.db #0x5b	; 91
   01CE 59                  489 	.db #0x59	; 89	'Y'
   01CF 57                  490 	.db #0x57	; 87	'W'
   01D0 55                  491 	.db #0x55	; 85	'U'
   01D1 53                  492 	.db #0x53	; 83	'S'
   01D2 50                  493 	.db #0x50	; 80	'P'
   01D3 4E                  494 	.db #0x4e	; 78	'N'
   01D4 4C                  495 	.db #0x4c	; 76	'L'
   01D5 4A                  496 	.db #0x4a	; 74	'J'
   01D6 48                  497 	.db #0x48	; 72	'H'
   01D7 46                  498 	.db #0x46	; 70	'F'
   01D8 44                  499 	.db #0x44	; 68	'D'
   01D9 41                  500 	.db #0x41	; 65	'A'
   01DA 3F                  501 	.db #0x3f	; 63
   01DB 3D                  502 	.db #0x3d	; 61
   01DC 3B                  503 	.db #0x3b	; 59
   01DD 39                  504 	.db #0x39	; 57	'9'
   01DE 37                  505 	.db #0x37	; 55	'7'
   01DF 35                  506 	.db #0x35	; 53	'5'
   01E0 33                  507 	.db #0x33	; 51	'3'
   01E1 31                  508 	.db #0x31	; 49	'1'
   01E2 2F                  509 	.db #0x2f	; 47
   01E3 2D                  510 	.db #0x2d	; 45
   01E4 2C                  511 	.db #0x2c	; 44
   01E5 2A                  512 	.db #0x2a	; 42
   01E6 28                  513 	.db #0x28	; 40
   01E7 26                  514 	.db #0x26	; 38
   01E8 24                  515 	.db #0x24	; 36
   01E9 23                  516 	.db #0x23	; 35
   01EA 21                  517 	.db #0x21	; 33
   01EB 1F                  518 	.db #0x1f	; 31
   01EC 1E                  519 	.db #0x1e	; 30
   01ED 1C                  520 	.db #0x1c	; 28
   01EE 1A                  521 	.db #0x1a	; 26
   01EF 19                  522 	.db #0x19	; 25
   01F0 17                  523 	.db #0x17	; 23
   01F1 16                  524 	.db #0x16	; 22
   01F2 14                  525 	.db #0x14	; 20
   01F3 13                  526 	.db #0x13	; 19
   01F4 12                  527 	.db #0x12	; 18
   01F5 10                  528 	.db #0x10	; 16
   01F6 0F                  529 	.db #0x0f	; 15
   01F7 0E                  530 	.db #0x0e	; 14
   01F8 0D                  531 	.db #0x0d	; 13
   01F9 0C                  532 	.db #0x0c	; 12
   01FA 0B                  533 	.db #0x0b	; 11
   01FB 0A                  534 	.db #0x0a	; 10
   01FC 09                  535 	.db #0x09	; 9
   01FD 08                  536 	.db #0x08	; 8
   01FE 07                  537 	.db #0x07	; 7
   01FF 06                  538 	.db #0x06	; 6
   0200 05                  539 	.db #0x05	; 5
   0201 05                  540 	.db #0x05	; 5
   0202 04                  541 	.db #0x04	; 4
   0203 03                  542 	.db #0x03	; 3
   0204 03                  543 	.db #0x03	; 3
   0205 02                  544 	.db #0x02	; 2
   0206 02                  545 	.db #0x02	; 2
   0207 01                  546 	.db #0x01	; 1
   0208 01                  547 	.db #0x01	; 1
   0209 01                  548 	.db #0x01	; 1
   020A 00                  549 	.db #0x00	; 0
   020B 00                  550 	.db #0x00	; 0
   020C 00                  551 	.db #0x00	; 0
   020D 00                  552 	.db #0x00	; 0
   020E 00                  553 	.db #0x00	; 0
   020F 00                  554 	.db #0x00	; 0
   0210 00                  555 	.db #0x00	; 0
   0211 00                  556 	.db #0x00	; 0
   0212 00                  557 	.db #0x00	; 0
   0213 01                  558 	.db #0x01	; 1
   0214 01                  559 	.db #0x01	; 1
   0215 01                  560 	.db #0x01	; 1
   0216 02                  561 	.db #0x02	; 2
   0217 02                  562 	.db #0x02	; 2
   0218 03                  563 	.db #0x03	; 3
   0219 03                  564 	.db #0x03	; 3
   021A 04                  565 	.db #0x04	; 4
   021B 04                  566 	.db #0x04	; 4
   021C 05                  567 	.db #0x05	; 5
   021D 06                  568 	.db #0x06	; 6
   021E 07                  569 	.db #0x07	; 7
   021F 07                  570 	.db #0x07	; 7
   0220 08                  571 	.db #0x08	; 8
   0221 09                  572 	.db #0x09	; 9
   0222 0A                  573 	.db #0x0a	; 10
   0223 0B                  574 	.db #0x0b	; 11
   0224 0C                  575 	.db #0x0c	; 12
   0225 0D                  576 	.db #0x0d	; 13
   0226 0F                  577 	.db #0x0f	; 15
   0227 10                  578 	.db #0x10	; 16
   0228 11                  579 	.db #0x11	; 17
   0229 12                  580 	.db #0x12	; 18
   022A 14                  581 	.db #0x14	; 20
   022B 15                  582 	.db #0x15	; 21
   022C 17                  583 	.db #0x17	; 23
   022D 18                  584 	.db #0x18	; 24
   022E 1A                  585 	.db #0x1a	; 26
   022F 1B                  586 	.db #0x1b	; 27
   0230 1D                  587 	.db #0x1d	; 29
   0231 1E                  588 	.db #0x1e	; 30
   0232 20                  589 	.db #0x20	; 32
   0233 22                  590 	.db #0x22	; 34
   0234 23                  591 	.db #0x23	; 35
   0235 25                  592 	.db #0x25	; 37
   0236 27                  593 	.db #0x27	; 39
   0237 29                  594 	.db #0x29	; 41
   0238 2B                  595 	.db #0x2b	; 43
   0239 2C                  596 	.db #0x2c	; 44
   023A 2E                  597 	.db #0x2e	; 46
   023B 30                  598 	.db #0x30	; 48	'0'
   023C 32                  599 	.db #0x32	; 50	'2'
   023D 34                  600 	.db #0x34	; 52	'4'
   023E 36                  601 	.db #0x36	; 54	'6'
   023F 38                  602 	.db #0x38	; 56	'8'
   0240 3A                  603 	.db #0x3a	; 58
   0241 3C                  604 	.db #0x3c	; 60
   0242 3E                  605 	.db #0x3e	; 62
   0243 40                  606 	.db #0x40	; 64
   0244 43                  607 	.db #0x43	; 67	'C'
   0245 45                  608 	.db #0x45	; 69	'E'
   0246 47                  609 	.db #0x47	; 71	'G'
   0247 49                  610 	.db #0x49	; 73	'I'
   0248 4B                  611 	.db #0x4b	; 75	'K'
   0249 4D                  612 	.db #0x4d	; 77	'M'
   024A 4F                  613 	.db #0x4f	; 79	'O'
   024B 52                  614 	.db #0x52	; 82	'R'
   024C 54                  615 	.db #0x54	; 84	'T'
   024D 56                  616 	.db #0x56	; 86	'V'
   024E 58                  617 	.db #0x58	; 88	'X'
                            618 ;src\monkey1.c:166: char INKEY() __naked
                            619 ;	---------------------------------
                            620 ; Function INKEY
                            621 ; ---------------------------------
   024F                     622 _INKEY::
                            623 ;src\monkey1.c:178: __endasm;
   024F DD E5         [15]  624 	push	IX
   0251 DD 21 00 00   [14]  625 	ld	IX,#0
   0255 DD 39         [15]  626 	add	IX,SP
   0257 CD 9F 00      [17]  627 	call	0x009F
   025A 6F            [ 4]  628 	ld	L,A
   025B DD E1         [14]  629 	pop	IX
   025D C9            [10]  630 	ret
                            631 ;src\monkey1.c:179: }
                            632 ;src\monkey1.c:185: void WAIT(uint cicles)
                            633 ;	---------------------------------
                            634 ; Function WAIT
                            635 ; ---------------------------------
   025E                     636 _WAIT::
                            637 ;src\monkey1.c:188: for(i=0;i<cicles;i++) HALT;
   025E 01 00 00      [10]  638 	ld	bc, #0x0000
   0261                     639 00103$:
   0261 21 02 00      [10]  640 	ld	hl, #2
   0264 39            [11]  641 	add	hl, sp
   0265 79            [ 4]  642 	ld	a, c
   0266 96            [ 7]  643 	sub	a, (hl)
   0267 78            [ 4]  644 	ld	a, b
   0268 23            [ 6]  645 	inc	hl
   0269 9E            [ 7]  646 	sbc	a, (hl)
   026A D0            [11]  647 	ret	NC
   026B 76            [ 4]  648 	halt	
   026C 03            [ 6]  649 	inc	bc
                            650 ;src\monkey1.c:189: }
   026D 18 F2         [12]  651 	jr	00103$
                            652 ;src\monkey1.c:192: void CLS()
                            653 ;	---------------------------------
                            654 ; Function CLS
                            655 ; ---------------------------------
   026F                     656 _CLS::
                            657 ;src\monkey1.c:194: FillVRAM (BASE5, 0x300, 32);
   026F 3E 20         [ 7]  658 	ld	a, #0x20
   0271 F5            [11]  659 	push	af
   0272 33            [ 6]  660 	inc	sp
   0273 21 00 03      [10]  661 	ld	hl, #0x0300
   0276 E5            [11]  662 	push	hl
   0277 26 18         [ 7]  663 	ld	h, #0x18
   0279 E5            [11]  664 	push	hl
   027A CDr89r03      [17]  665 	call	_FillVRAM
   027D F1            [10]  666 	pop	af
   027E F1            [10]  667 	pop	af
   027F 33            [ 6]  668 	inc	sp
                            669 ;src\monkey1.c:195: }
   0280 C9            [10]  670 	ret
                            671 ;src\monkey1.c:199: void VPRINT(byte column, byte line, char* text)
                            672 ;	---------------------------------
                            673 ; Function VPRINT
                            674 ; ---------------------------------
   0281                     675 _VPRINT::
   0281 DD E5         [15]  676 	push	ix
   0283 DD 21 00 00   [14]  677 	ld	ix,#0
   0287 DD 39         [15]  678 	add	ix,sp
                            679 ;src\monkey1.c:201: uint vaddr = BASE5 + (line*32)+column; // calcula la posicion en la VRAM
   0289 DD 6E 05      [19]  680 	ld	l, 5 (ix)
   028C 26 00         [ 7]  681 	ld	h, #0x00
   028E 29            [11]  682 	add	hl, hl
   028F 29            [11]  683 	add	hl, hl
   0290 29            [11]  684 	add	hl, hl
   0291 29            [11]  685 	add	hl, hl
   0292 29            [11]  686 	add	hl, hl
   0293 01 00 18      [10]  687 	ld	bc, #0x1800
   0296 09            [11]  688 	add	hl, bc
   0297 DD 4E 04      [19]  689 	ld	c, 4 (ix)
   029A 06 00         [ 7]  690 	ld	b, #0x00
   029C 09            [11]  691 	add	hl, bc
                            692 ;src\monkey1.c:202: VPOKEARRAY(vaddr, text);
   029D DD 4E 06      [19]  693 	ld	c, 6 (ix)
   02A0 DD 46 07      [19]  694 	ld	b, 7 (ix)
   02A3 C5            [11]  695 	push	bc
   02A4 E5            [11]  696 	push	hl
   02A5 CDrADr02      [17]  697 	call	_VPOKEARRAY
   02A8 F1            [10]  698 	pop	af
   02A9 F1            [10]  699 	pop	af
                            700 ;src\monkey1.c:203: }
   02AA DD E1         [14]  701 	pop	ix
   02AC C9            [10]  702 	ret
                            703 ;src\monkey1.c:207: void VPOKEARRAY(uint vaddr, char* text)
                            704 ;	---------------------------------
                            705 ; Function VPOKEARRAY
                            706 ; ---------------------------------
   02AD                     707 _VPOKEARRAY::
   02AD DD E5         [15]  708 	push	ix
   02AF DD 21 00 00   [14]  709 	ld	ix,#0
   02B3 DD 39         [15]  710 	add	ix,sp
                            711 ;src\monkey1.c:209: while(*(text)) VPOKE(vaddr++,*(text++));
   02B5 DD 4E 06      [19]  712 	ld	c, 6 (ix)
   02B8 DD 46 07      [19]  713 	ld	b, 7 (ix)
   02BB DD 5E 04      [19]  714 	ld	e, 4 (ix)
   02BE DD 56 05      [19]  715 	ld	d, 5 (ix)
   02C1                     716 00101$:
   02C1 0A            [ 7]  717 	ld	a, (bc)
   02C2 B7            [ 4]  718 	or	a, a
   02C3 28 1B         [12]  719 	jr	Z,00104$
   02C5 67            [ 4]  720 	ld	h, a
   02C6 03            [ 6]  721 	inc	bc
   02C7 D5            [11]  722 	push	de
   02C8 FD E1         [14]  723 	pop	iy
   02CA 13            [ 6]  724 	inc	de
   02CB DD 73 04      [19]  725 	ld	4 (ix), e
   02CE DD 72 05      [19]  726 	ld	5 (ix), d
   02D1 C5            [11]  727 	push	bc
   02D2 D5            [11]  728 	push	de
   02D3 E5            [11]  729 	push	hl
   02D4 33            [ 6]  730 	inc	sp
   02D5 FD E5         [15]  731 	push	iy
   02D7 CDr5Dr03      [17]  732 	call	_VPOKE
   02DA F1            [10]  733 	pop	af
   02DB 33            [ 6]  734 	inc	sp
   02DC D1            [10]  735 	pop	de
   02DD C1            [10]  736 	pop	bc
   02DE 18 E1         [12]  737 	jr	00101$
   02E0                     738 00104$:
                            739 ;src\monkey1.c:210: }
   02E0 DD E1         [14]  740 	pop	ix
   02E2 C9            [10]  741 	ret
                            742 ;src\monkey1.c:220: void LOCATE(char x, char y) __naked
                            743 ;	---------------------------------
                            744 ; Function LOCATE
                            745 ; ---------------------------------
   02E3                     746 _LOCATE::
                            747 ;src\monkey1.c:238: __endasm;
   02E3 DD E5         [15]  748 	push	IX
   02E5 DD 21 00 00   [14]  749 	ld	IX,#0
   02E9 DD 39         [15]  750 	add	IX,SP
   02EB DD 7E 04      [19]  751 	ld	A,4(IX) ;x
   02EE 3C            [ 4]  752 	inc	A ;incrementa las posiciones para que se situen correctamente en la pantalla
   02EF 67            [ 4]  753 	ld	H,A
   02F0 DD 7E 05      [19]  754 	ld	A,5(IX) ;y
   02F3 3C            [ 4]  755 	inc	A
   02F4 6F            [ 4]  756 	ld	L,A
   02F5 CD C6 00      [17]  757 	call	0x00C6
   02F8 DD E1         [14]  758 	pop	IX
   02FA C9            [10]  759 	ret
                            760 ;src\monkey1.c:240: }
                            761 ;src\monkey1.c:247: void PRINT(char* text) __naked
                            762 ;	---------------------------------
                            763 ; Function PRINT
                            764 ; ---------------------------------
   02FB                     765 _PRINT::
                            766 ;src\monkey1.c:269: __endasm; 
   02FB DD E5         [15]  767 	push	IX
   02FD DD 21 00 00   [14]  768 	ld	IX,#0
   0301 DD 39         [15]  769 	add	IX,SP
   0303 DD 6E 04      [19]  770 	ld	L,4(ix)
   0306 DD 66 05      [19]  771 	ld	H,5(ix)
   0309                     772 	nextCHAR:
   0309 7E            [ 7]  773 	ld	A,(HL)
   030A B7            [ 4]  774 	or	A
   030B 28 06         [12]  775 	jr	Z,ENDnext
   030D CD A2 00      [17]  776 	call	0x00A2
   0310 23            [ 6]  777 	inc	HL
   0311 18 F6         [12]  778 	jr	nextCHAR
   0313                     779 	ENDnext:
   0313 DD E1         [14]  780 	pop	IX
   0315 C9            [10]  781 	ret
                            782 ;src\monkey1.c:270: }
                            783 ;src\monkey1.c:275: char PEEK(uint address) __naked
                            784 ;	---------------------------------
                            785 ; Function PEEK
                            786 ; ---------------------------------
   0316                     787 _PEEK::
                            788 ;src\monkey1.c:290: __endasm;
   0316 DD E5         [15]  789 	push	IX
   0318 DD 21 00 00   [14]  790 	ld	IX,#0
   031C DD 39         [15]  791 	add	IX,SP
   031E DD 6E 04      [19]  792 	ld	L,4(IX)
   0321 DD 66 05      [19]  793 	ld	H,5(IX)
   0324 6E            [ 7]  794 	ld	L,(HL)
   0325 DD E1         [14]  795 	pop	IX
   0327 C9            [10]  796 	ret
                            797 ;src\monkey1.c:291: }
                            798 ;src\monkey1.c:296: uint PEEKW(uint address) __naked
                            799 ;	---------------------------------
                            800 ; Function PEEKW
                            801 ; ---------------------------------
   0328                     802 _PEEKW::
                            803 ;src\monkey1.c:313: __endasm;
   0328 DD E5         [15]  804 	push	IX
   032A DD 21 00 00   [14]  805 	ld	IX,#0
   032E DD 39         [15]  806 	add	IX,SP
   0330 DD 6E 04      [19]  807 	ld	L,4(ix)
   0333 DD 66 05      [19]  808 	ld	H,5(ix)
   0336 5E            [ 7]  809 	ld	E,(HL)
   0337 23            [ 6]  810 	inc	HL
   0338 56            [ 7]  811 	ld	D,(HL)
   0339 EB            [ 4]  812 	ex	DE,HL
   033A DD E1         [14]  813 	pop	IX
   033C C9            [10]  814 	ret
                            815 ;src\monkey1.c:314: }
                            816 ;src\monkey1.c:326: void COLOR(char ink, char background, char border) __naked
                            817 ;	---------------------------------
                            818 ; Function COLOR
                            819 ; ---------------------------------
   033D                     820 _COLOR::
                            821 ;src\monkey1.c:349: __endasm;
   033D DD E5         [15]  822 	push	IX
   033F DD 21 00 00   [14]  823 	ld	IX,#0
   0343 DD 39         [15]  824 	add	IX,SP
   0345 DD 7E 04      [19]  825 	ld	A,4(IX)
   0348 32 E9 F3      [13]  826 	ld	(0xF3E9),A
   034B DD 7E 05      [19]  827 	ld	A,5(IX)
   034E 32 EA F3      [13]  828 	ld	(0xF3EA),A
   0351 DD 7E 06      [19]  829 	ld	A,6(IX)
   0354 32 EB F3      [13]  830 	ld	(0xF3EB),A
   0357 CD 62 00      [17]  831 	call	0x0062
   035A DD E1         [14]  832 	pop	IX
   035C C9            [10]  833 	ret
                            834 ;src\monkey1.c:350: }
                            835 ;src\monkey1.c:361: void VPOKE(unsigned int vaddr, char value) __naked
                            836 ;	---------------------------------
                            837 ; Function VPOKE
                            838 ; ---------------------------------
   035D                     839 _VPOKE::
                            840 ;src\monkey1.c:379: __endasm;
   035D DD E5         [15]  841 	push	IX
   035F DD 21 00 00   [14]  842 	ld	IX,#0
   0363 DD 39         [15]  843 	add	IX,SP
   0365 DD 6E 04      [19]  844 	ld	L,4(IX)
   0368 DD 66 05      [19]  845 	ld	H,5(IX)
   036B DD 7E 06      [19]  846 	ld	A,6(IX)
   036E CD 4D 00      [17]  847 	call	0x004D
   0371 DD E1         [14]  848 	pop	IX
   0373 C9            [10]  849 	ret
                            850 ;src\monkey1.c:380: }
                            851 ;src\monkey1.c:390: char VPEEK(unsigned int vaddr) __naked
                            852 ;	---------------------------------
                            853 ; Function VPEEK
                            854 ; ---------------------------------
   0374                     855 _VPEEK::
                            856 ;src\monkey1.c:407: __endasm;
   0374 DD E5         [15]  857 	push	IX
   0376 DD 21 00 00   [14]  858 	ld	IX,#0
   037A DD 39         [15]  859 	add	IX,SP
   037C DD 6E 04      [19]  860 	ld	L,4(IX)
   037F DD 66 05      [19]  861 	ld	H,5(IX)
   0382 CD 4A 00      [17]  862 	call	0x004A
   0385 6F            [ 4]  863 	ld	L,A
   0386 DD E1         [14]  864 	pop	IX
   0388 C9            [10]  865 	ret
                            866 ;src\monkey1.c:408: }
                            867 ;src\monkey1.c:420: void FillVRAM(unsigned int vaddr, unsigned int length, char value) __naked
                            868 ;	---------------------------------
                            869 ; Function FillVRAM
                            870 ; ---------------------------------
   0389                     871 _FillVRAM::
                            872 ;src\monkey1.c:442: __endasm;
   0389 DD E5         [15]  873 	push	IX
   038B DD 21 00 00   [14]  874 	ld	IX,#0
   038F DD 39         [15]  875 	add	IX,SP
   0391 DD 6E 04      [19]  876 	ld	L,4(IX) ; vaddress
   0394 DD 66 05      [19]  877 	ld	H,5(IX)
   0397 DD 4E 06      [19]  878 	ld	C,6(IX) ;length
   039A DD 46 07      [19]  879 	ld	B,7(IX)
   039D DD 7E 08      [19]  880 	ld	A,8(IX) ;value
   03A0 CD 56 00      [17]  881 	call	0x0056
   03A3 DD E1         [14]  882 	pop	IX
   03A5 C9            [10]  883 	ret
                            884 ;src\monkey1.c:443: }
                            885 ;src\monkey1.c:455: void CopyToVRAM(unsigned int addr, unsigned int vaddr, unsigned int length) __naked
                            886 ;	---------------------------------
                            887 ; Function CopyToVRAM
                            888 ; ---------------------------------
   03A6                     889 _CopyToVRAM::
                            890 ;src\monkey1.c:478: __endasm;
   03A6 DD E5         [15]  891 	push	IX
   03A8 DD 21 00 00   [14]  892 	ld	IX,#0
   03AC DD 39         [15]  893 	add	IX,SP
   03AE DD 6E 04      [19]  894 	ld	L,4(IX) ;ram address
   03B1 DD 66 05      [19]  895 	ld	H,5(IX)
   03B4 DD 5E 06      [19]  896 	ld	E,6(IX) ;VRAM address
   03B7 DD 56 07      [19]  897 	ld	D,7(IX)
   03BA DD 4E 08      [19]  898 	ld	C,8(IX) ;length
   03BD DD 46 09      [19]  899 	ld	B,9(IX)
   03C0 CD 5C 00      [17]  900 	call	0x005C
   03C3 DD E1         [14]  901 	pop	IX
   03C5 C9            [10]  902 	ret
                            903 ;src\monkey1.c:479: }
                            904 ;src\monkey1.c:484: void setFont()
                            905 ;	---------------------------------
                            906 ; Function setFont
                            907 ; ---------------------------------
   03C6                     908 _setFont::
                            909 ;src\monkey1.c:486: uint ROMfont = PEEKW(CGTABL);
   03C6 21 04 00      [10]  910 	ld	hl, #0x0004
   03C9 E5            [11]  911 	push	hl
   03CA CDr28r03      [17]  912 	call	_PEEKW
   03CD F1            [10]  913 	pop	af
                            914 ;src\monkey1.c:488: CopyToVRAM(ROMfont,BASE7,0x800);       //MSX font pattern
   03CE 01 00 08      [10]  915 	ld	bc, #0x0800
   03D1 C5            [11]  916 	push	bc
   03D2 01 00 00      [10]  917 	ld	bc, #0x0000
   03D5 C5            [11]  918 	push	bc
   03D6 E5            [11]  919 	push	hl
   03D7 CDrA6r03      [17]  920 	call	_CopyToVRAM
   03DA 21 06 00      [10]  921 	ld	hl, #6
   03DD 39            [11]  922 	add	hl, sp
   03DE F9            [ 6]  923 	ld	sp, hl
                            924 ;src\monkey1.c:490: FillVRAM(BASE6,32,0xF4);           //colors
   03DF 3E F4         [ 7]  925 	ld	a, #0xf4
   03E1 F5            [11]  926 	push	af
   03E2 33            [ 6]  927 	inc	sp
   03E3 21 20 00      [10]  928 	ld	hl, #0x0020
   03E6 E5            [11]  929 	push	hl
   03E7 21 00 20      [10]  930 	ld	hl, #0x2000
   03EA E5            [11]  931 	push	hl
   03EB CDr89r03      [17]  932 	call	_FillVRAM
   03EE F1            [10]  933 	pop	af
   03EF F1            [10]  934 	pop	af
   03F0 33            [ 6]  935 	inc	sp
                            936 ;src\monkey1.c:492: return;
                            937 ;src\monkey1.c:493: }
   03F1 C9            [10]  938 	ret
                            939 ;src\monkey1.c:499: void testSPRITES()
                            940 ;	---------------------------------
                            941 ; Function testSPRITES
                            942 ; ---------------------------------
   03F2                     943 _testSPRITES::
   03F2 DD E5         [15]  944 	push	ix
   03F4 DD 21 00 00   [14]  945 	ld	ix,#0
   03F8 DD 39         [15]  946 	add	ix,sp
   03FA F5            [11]  947 	push	af
   03FB F5            [11]  948 	push	af
                            949 ;src\monkey1.c:504: char frame=0;
   03FC DD 36 FC 00   [19]  950 	ld	-4 (ix), #0x00
                            951 ;src\monkey1.c:511: VPRINT(0,cursorLine++, text01);
   0400 21r15r00      [10]  952 	ld	hl, #_text01
   0403 E5            [11]  953 	push	hl
   0404 AF            [ 4]  954 	xor	a, a
   0405 F5            [11]  955 	push	af
   0406 33            [ 6]  956 	inc	sp
   0407 AF            [ 4]  957 	xor	a, a
   0408 F5            [11]  958 	push	af
   0409 33            [ 6]  959 	inc	sp
   040A CDr81r02      [17]  960 	call	_VPRINT
   040D F1            [10]  961 	pop	af
                            962 ;src\monkey1.c:512: VPRINT(0,cursorLine++, text02);
   040E 21r2Er00      [10]  963 	ld	hl, #_text02
   0411 E3            [19]  964 	ex	(sp),hl
   0412 3E 01         [ 7]  965 	ld	a, #0x01
   0414 F5            [11]  966 	push	af
   0415 33            [ 6]  967 	inc	sp
   0416 AF            [ 4]  968 	xor	a, a
   0417 F5            [11]  969 	push	af
   0418 33            [ 6]  970 	inc	sp
   0419 CDr81r02      [17]  971 	call	_VPRINT
   041C F1            [10]  972 	pop	af
                            973 ;src\monkey1.c:516: VPRINT(0,cursorLine++, "-----------------Test Functions");
   041D 21r6Cr05      [10]  974 	ld	hl, #___str_2
   0420 E3            [19]  975 	ex	(sp),hl
   0421 3E 02         [ 7]  976 	ld	a, #0x02
   0423 F5            [11]  977 	push	af
   0424 33            [ 6]  978 	inc	sp
   0425 AF            [ 4]  979 	xor	a, a
   0426 F5            [11]  980 	push	af
   0427 33            [ 6]  981 	inc	sp
   0428 CDr81r02      [17]  982 	call	_VPRINT
   042B F1            [10]  983 	pop	af
                            984 ;src\monkey1.c:520: VPRINT(0,cursorLine++, "ShowMonkey(plane,x,y,color)"); 
   042C 21r8Cr05      [10]  985 	ld	hl, #___str_3
   042F E3            [19]  986 	ex	(sp),hl
   0430 3E 03         [ 7]  987 	ld	a, #0x03
   0432 F5            [11]  988 	push	af
   0433 33            [ 6]  989 	inc	sp
   0434 AF            [ 4]  990 	xor	a, a
   0435 F5            [11]  991 	push	af
   0436 33            [ 6]  992 	inc	sp
   0437 CDr81r02      [17]  993 	call	_VPRINT
   043A F1            [10]  994 	pop	af
   043B F1            [10]  995 	pop	af
                            996 ;src\monkey1.c:521: showSprites();
   043C CDr08r06      [17]  997 	call	_showSprites
                            998 ;src\monkey1.c:522: WAIT(100);
   043F 21 64 00      [10]  999 	ld	hl, #0x0064
   0442 E5            [11] 1000 	push	hl
   0443 CDr5Er02      [17] 1001 	call	_WAIT
                           1002 ;src\monkey1.c:525: VPRINT(0,cursorLine++, "UpdateMonkeyFrame(plane,frame)"); 
   0446 21rA8r05      [10] 1003 	ld	hl, #___str_4
   0449 E3            [19] 1004 	ex	(sp),hl
   044A 3E 04         [ 7] 1005 	ld	a, #0x04
   044C F5            [11] 1006 	push	af
   044D 33            [ 6] 1007 	inc	sp
   044E AF            [ 4] 1008 	xor	a, a
   044F F5            [11] 1009 	push	af
   0450 33            [ 6] 1010 	inc	sp
   0451 CDr81r02      [17] 1011 	call	_VPRINT
   0454 F1            [10] 1012 	pop	af
   0455 F1            [10] 1013 	pop	af
                           1014 ;src\monkey1.c:526: for(i=0;i<20;i++)
   0456 01 00 00      [10] 1015 	ld	bc, #0x0000
   0459                    1016 00112$:
                           1017 ;src\monkey1.c:528: WAIT(16);
   0459 C5            [11] 1018 	push	bc
   045A 21 10 00      [10] 1019 	ld	hl, #0x0010
   045D E5            [11] 1020 	push	hl
   045E CDr5Er02      [17] 1021 	call	_WAIT
   0461 F1            [10] 1022 	pop	af
   0462 C1            [10] 1023 	pop	bc
                           1024 ;src\monkey1.c:529: for(plane=0;plane<32;plane++) UpdateMonkeyFrame(plane,1);
   0463 16 00         [ 7] 1025 	ld	d, #0x00
   0465                    1026 00108$:
   0465 C5            [11] 1027 	push	bc
   0466 D5            [11] 1028 	push	de
   0467 3E 01         [ 7] 1029 	ld	a, #0x01
   0469 F5            [11] 1030 	push	af
   046A 33            [ 6] 1031 	inc	sp
   046B D5            [11] 1032 	push	de
   046C 33            [ 6] 1033 	inc	sp
   046D CDr00r00      [17] 1034 	call	_UpdateMonkeyFrame
   0470 F1            [10] 1035 	pop	af
   0471 D1            [10] 1036 	pop	de
   0472 C1            [10] 1037 	pop	bc
   0473 14            [ 4] 1038 	inc	d
   0474 7A            [ 4] 1039 	ld	a, d
   0475 D6 20         [ 7] 1040 	sub	a, #0x20
   0477 38 EC         [12] 1041 	jr	C,00108$
                           1042 ;src\monkey1.c:530: WAIT(16);
   0479 C5            [11] 1043 	push	bc
   047A 21 10 00      [10] 1044 	ld	hl, #0x0010
   047D E5            [11] 1045 	push	hl
   047E CDr5Er02      [17] 1046 	call	_WAIT
   0481 F1            [10] 1047 	pop	af
   0482 C1            [10] 1048 	pop	bc
                           1049 ;src\monkey1.c:531: for(plane=0;plane<32;plane++) UpdateMonkeyFrame(plane,0);
   0483 16 00         [ 7] 1050 	ld	d, #0x00
   0485                    1051 00110$:
   0485 C5            [11] 1052 	push	bc
   0486 D5            [11] 1053 	push	de
   0487 AF            [ 4] 1054 	xor	a, a
   0488 F5            [11] 1055 	push	af
   0489 33            [ 6] 1056 	inc	sp
   048A D5            [11] 1057 	push	de
   048B 33            [ 6] 1058 	inc	sp
   048C CDr00r00      [17] 1059 	call	_UpdateMonkeyFrame
   048F F1            [10] 1060 	pop	af
   0490 D1            [10] 1061 	pop	de
   0491 C1            [10] 1062 	pop	bc
   0492 14            [ 4] 1063 	inc	d
   0493 7A            [ 4] 1064 	ld	a, d
   0494 D6 20         [ 7] 1065 	sub	a, #0x20
   0496 38 ED         [12] 1066 	jr	C,00110$
                           1067 ;src\monkey1.c:526: for(i=0;i<20;i++)
   0498 03            [ 6] 1068 	inc	bc
   0499 79            [ 4] 1069 	ld	a, c
   049A D6 14         [ 7] 1070 	sub	a, #0x14
   049C 78            [ 4] 1071 	ld	a, b
   049D DE 00         [ 7] 1072 	sbc	a, #0x00
   049F 38 B8         [12] 1073 	jr	C,00112$
                           1074 ;src\monkey1.c:535: VPRINT(0,cursorLine++, "ClearMonkeys()");
   04A1 21rC7r05      [10] 1075 	ld	hl, #___str_5
   04A4 E5            [11] 1076 	push	hl
   04A5 3E 05         [ 7] 1077 	ld	a, #0x05
   04A7 F5            [11] 1078 	push	af
   04A8 33            [ 6] 1079 	inc	sp
   04A9 AF            [ 4] 1080 	xor	a, a
   04AA F5            [11] 1081 	push	af
   04AB 33            [ 6] 1082 	inc	sp
   04AC CDr81r02      [17] 1083 	call	_VPRINT
   04AF F1            [10] 1084 	pop	af
   04B0 F1            [10] 1085 	pop	af
                           1086 ;src\monkey1.c:536: ClearMonkeys();
   04B1 CDr00r00      [17] 1087 	call	_ClearMonkeys
                           1088 ;src\monkey1.c:537: WAIT(100);
   04B4 21 64 00      [10] 1089 	ld	hl, #0x0064
   04B7 E5            [11] 1090 	push	hl
   04B8 CDr5Er02      [17] 1091 	call	_WAIT
                           1092 ;src\monkey1.c:541: VPRINT(0,cursorLine++, "Monkeys Dancing");
   04BB 21rD6r05      [10] 1093 	ld	hl, #___str_6
   04BE E3            [19] 1094 	ex	(sp),hl
   04BF 3E 06         [ 7] 1095 	ld	a, #0x06
   04C1 F5            [11] 1096 	push	af
   04C2 33            [ 6] 1097 	inc	sp
   04C3 AF            [ 4] 1098 	xor	a, a
   04C4 F5            [11] 1099 	push	af
   04C5 33            [ 6] 1100 	inc	sp
   04C6 CDr81r02      [17] 1101 	call	_VPRINT
   04C9 F1            [10] 1102 	pop	af
   04CA F1            [10] 1103 	pop	af
                           1104 ;src\monkey1.c:542: for(i=0;i<2048;i++)
   04CB DD 36 FD 00   [19] 1105 	ld	-3 (ix), #0x00
   04CF DD 36 FE 00   [19] 1106 	ld	-2 (ix), #0x00
   04D3 DD 36 FF 00   [19] 1107 	ld	-1 (ix), #0x00
   04D7                    1108 00116$:
                           1109 ;src\monkey1.c:544: HALT;    
   04D7 76            [ 4] 1110 	halt	
                           1111 ;src\monkey1.c:546: for(plane=0;plane<32;plane++)
   04D8 DD 7E FC      [19] 1112 	ld	a, -4 (ix)
   04DB 07            [ 4] 1113 	rlca
   04DC 07            [ 4] 1114 	rlca
   04DD 07            [ 4] 1115 	rlca
   04DE 07            [ 4] 1116 	rlca
   04DF E6 0F         [ 7] 1117 	and	a, #0x0f
   04E1 4F            [ 4] 1118 	ld	c, a
   04E2 06 00         [ 7] 1119 	ld	b, #0x00
   04E4                    1120 00114$:
                           1121 ;src\monkey1.c:548: posMonkey = grade + (plane*8);
   04E4 78            [ 4] 1122 	ld	a, b
   04E5 87            [ 4] 1123 	add	a, a
   04E6 87            [ 4] 1124 	add	a, a
   04E7 87            [ 4] 1125 	add	a, a
   04E8 5F            [ 4] 1126 	ld	e, a
   04E9 DD 7E FD      [19] 1127 	ld	a, -3 (ix)
   04EC 83            [ 4] 1128 	add	a, e
   04ED 5F            [ 4] 1129 	ld	e, a
                           1130 ;src\monkey1.c:549: ShowMonkey(plane, posX[posMonkey], posY[posMonkey], 8);
   04EE 21r4Fr01      [10] 1131 	ld	hl, #_posY
   04F1 16 00         [ 7] 1132 	ld	d, #0x00
   04F3 19            [11] 1133 	add	hl, de
   04F4 56            [ 7] 1134 	ld	d, (hl)
   04F5 7B            [ 4] 1135 	ld	a, e
   04F6 C6r4F         [ 7] 1136 	add	a, #<(_posX)
   04F8 6F            [ 4] 1137 	ld	l, a
   04F9 3E 00         [ 7] 1138 	ld	a, #0x00
   04FB CEs00         [ 7] 1139 	adc	a, #>(_posX)
   04FD 67            [ 4] 1140 	ld	h, a
   04FE 5E            [ 7] 1141 	ld	e, (hl)
   04FF C5            [11] 1142 	push	bc
   0500 3E 08         [ 7] 1143 	ld	a, #0x08
   0502 F5            [11] 1144 	push	af
   0503 33            [ 6] 1145 	inc	sp
   0504 D5            [11] 1146 	push	de
   0505 C5            [11] 1147 	push	bc
   0506 33            [ 6] 1148 	inc	sp
   0507 CDr00r00      [17] 1149 	call	_ShowMonkey
   050A F1            [10] 1150 	pop	af
   050B F1            [10] 1151 	pop	af
   050C C1            [10] 1152 	pop	bc
                           1153 ;src\monkey1.c:551: UpdateMonkeyFrame(plane,frame>>4);           
   050D C5            [11] 1154 	push	bc
   050E 79            [ 4] 1155 	ld	a, c
   050F F5            [11] 1156 	push	af
   0510 33            [ 6] 1157 	inc	sp
   0511 C5            [11] 1158 	push	bc
   0512 33            [ 6] 1159 	inc	sp
   0513 CDr00r00      [17] 1160 	call	_UpdateMonkeyFrame
   0516 F1            [10] 1161 	pop	af
   0517 C1            [10] 1162 	pop	bc
                           1163 ;src\monkey1.c:546: for(plane=0;plane<32;plane++)
   0518 04            [ 4] 1164 	inc	b
   0519 78            [ 4] 1165 	ld	a, b
   051A D6 20         [ 7] 1166 	sub	a, #0x20
   051C 38 C6         [12] 1167 	jr	C,00114$
                           1168 ;src\monkey1.c:554: frame++;
   051E DD 34 FC      [23] 1169 	inc	-4 (ix)
                           1170 ;src\monkey1.c:555: if (frame>31) frame = 0; 
   0521 3E 1F         [ 7] 1171 	ld	a, #0x1f
   0523 DD 96 FC      [19] 1172 	sub	a, -4 (ix)
   0526 30 04         [12] 1173 	jr	NC,00106$
   0528 DD 36 FC 00   [19] 1174 	ld	-4 (ix), #0x00
   052C                    1175 00106$:
                           1176 ;src\monkey1.c:557: grade++;
   052C DD 34 FD      [23] 1177 	inc	-3 (ix)
                           1178 ;src\monkey1.c:542: for(i=0;i<2048;i++)
   052F DD 34 FE      [23] 1179 	inc	-2 (ix)
   0532 20 03         [12] 1180 	jr	NZ,00180$
   0534 DD 34 FF      [23] 1181 	inc	-1 (ix)
   0537                    1182 00180$:
   0537 DD 7E FF      [19] 1183 	ld	a, -1 (ix)
   053A D6 08         [ 7] 1184 	sub	a, #0x08
   053C 38 99         [12] 1185 	jr	C,00116$
                           1186 ;src\monkey1.c:565: VPRINT(0,cursorLine, "Press any key.");
   053E 21rE6r05      [10] 1187 	ld	hl, #___str_7
   0541 E5            [11] 1188 	push	hl
   0542 3E 0A         [ 7] 1189 	ld	a, #0x0a
   0544 F5            [11] 1190 	push	af
   0545 33            [ 6] 1191 	inc	sp
   0546 AF            [ 4] 1192 	xor	a, a
   0547 F5            [11] 1193 	push	af
   0548 33            [ 6] 1194 	inc	sp
   0549 CDr81r02      [17] 1195 	call	_VPRINT
   054C F1            [10] 1196 	pop	af
   054D F1            [10] 1197 	pop	af
                           1198 ;src\monkey1.c:566: LOCATE(14,cursorLine);
   054E 11 0E 0A      [10] 1199 	ld	de, #0x0a0e
   0551 D5            [11] 1200 	push	de
   0552 CDrE3r02      [17] 1201 	call	_LOCATE
   0555 F1            [10] 1202 	pop	af
                           1203 ;src\monkey1.c:567: key = INKEY();
   0556 CDr4Fr02      [17] 1204 	call	_INKEY
                           1205 ;src\monkey1.c:571: VPRINT(0,cursorLine,"End of the test...");
   0559 21rF5r05      [10] 1206 	ld	hl, #___str_8
   055C E5            [11] 1207 	push	hl
   055D 3E 0C         [ 7] 1208 	ld	a, #0x0c
   055F F5            [11] 1209 	push	af
   0560 33            [ 6] 1210 	inc	sp
   0561 AF            [ 4] 1211 	xor	a, a
   0562 F5            [11] 1212 	push	af
   0563 33            [ 6] 1213 	inc	sp
   0564 CDr81r02      [17] 1214 	call	_VPRINT
                           1215 ;src\monkey1.c:573: }
   0567 DD F9         [10] 1216 	ld	sp,ix
   0569 DD E1         [14] 1217 	pop	ix
   056B C9            [10] 1218 	ret
   056C                    1219 ___str_2:
   056C 2D 2D 2D 2D 2D 2D  1220 	.ascii "-----------------Test Functions"
        2D 2D 2D 2D 2D 2D
        2D 2D 2D 2D 2D 54
        65 73 74 20 46 75
        6E 63 74 69 6F 6E
        73
   058B 00                 1221 	.db 0x00
   058C                    1222 ___str_3:
   058C 53 68 6F 77 4D 6F  1223 	.ascii "ShowMonkey(plane,x,y,color)"
        6E 6B 65 79 28 70
        6C 61 6E 65 2C 78
        2C 79 2C 63 6F 6C
        6F 72 29
   05A7 00                 1224 	.db 0x00
   05A8                    1225 ___str_4:
   05A8 55 70 64 61 74 65  1226 	.ascii "UpdateMonkeyFrame(plane,frame)"
        4D 6F 6E 6B 65 79
        46 72 61 6D 65 28
        70 6C 61 6E 65 2C
        66 72 61 6D 65 29
   05C6 00                 1227 	.db 0x00
   05C7                    1228 ___str_5:
   05C7 43 6C 65 61 72 4D  1229 	.ascii "ClearMonkeys()"
        6F 6E 6B 65 79 73
        28 29
   05D5 00                 1230 	.db 0x00
   05D6                    1231 ___str_6:
   05D6 4D 6F 6E 6B 65 79  1232 	.ascii "Monkeys Dancing"
        73 20 44 61 6E 63
        69 6E 67
   05E5 00                 1233 	.db 0x00
   05E6                    1234 ___str_7:
   05E6 50 72 65 73 73 20  1235 	.ascii "Press any key."
        61 6E 79 20 6B 65
        79 2E
   05F4 00                 1236 	.db 0x00
   05F5                    1237 ___str_8:
   05F5 45 6E 64 20 6F 66  1238 	.ascii "End of the test..."
        20 74 68 65 20 74
        65 73 74 2E 2E 2E
   0607 00                 1239 	.db 0x00
                           1240 ;src\monkey1.c:582: void showSprites()
                           1241 ;	---------------------------------
                           1242 ; Function showSprites
                           1243 ; ---------------------------------
   0608                    1244 _showSprites::
                           1245 ;src\monkey1.c:584: char x=0;
                           1246 ;src\monkey1.c:588: for(plane=0;plane<32;plane++)
   0608 01 00 00      [10] 1247 	ld	bc, #0x0000
   060B                    1248 00104$:
                           1249 ;src\monkey1.c:590: posY = (plane/4)*16;
   060B 68            [ 4] 1250 	ld	l, b
   060C 26 00         [ 7] 1251 	ld	h, #0x00
   060E 5D            [ 4] 1252 	ld	e, l
   060F 54            [ 4] 1253 	ld	d, h
   0610 CB 7C         [ 8] 1254 	bit	7, h
   0612 28 04         [12] 1255 	jr	Z,00108$
   0614 EB            [ 4] 1256 	ex	de,hl
   0615 13            [ 6] 1257 	inc	de
   0616 13            [ 6] 1258 	inc	de
   0617 13            [ 6] 1259 	inc	de
   0618                    1260 00108$:
   0618 CB 2A         [ 8] 1261 	sra	d
   061A CB 1B         [ 8] 1262 	rr	e
   061C CB 2A         [ 8] 1263 	sra	d
   061E CB 1B         [ 8] 1264 	rr	e
   0620 7B            [ 4] 1265 	ld	a, e
   0621 87            [ 4] 1266 	add	a, a
   0622 87            [ 4] 1267 	add	a, a
   0623 87            [ 4] 1268 	add	a, a
   0624 87            [ 4] 1269 	add	a, a
                           1270 ;src\monkey1.c:591: posY += 48;
   0625 C6 30         [ 7] 1271 	add	a, #0x30
   0627 67            [ 4] 1272 	ld	h, a
                           1273 ;src\monkey1.c:592: ShowMonkey(plane, x*16, posY, 8);
   0628 79            [ 4] 1274 	ld	a, c
   0629 87            [ 4] 1275 	add	a, a
   062A 87            [ 4] 1276 	add	a, a
   062B 87            [ 4] 1277 	add	a, a
   062C 87            [ 4] 1278 	add	a, a
   062D 57            [ 4] 1279 	ld	d, a
   062E C5            [11] 1280 	push	bc
   062F 3E 08         [ 7] 1281 	ld	a, #0x08
   0631 F5            [11] 1282 	push	af
   0632 33            [ 6] 1283 	inc	sp
   0633 6A            [ 4] 1284 	ld	l, d
   0634 E5            [11] 1285 	push	hl
   0635 C5            [11] 1286 	push	bc
   0636 33            [ 6] 1287 	inc	sp
   0637 CDr00r00      [17] 1288 	call	_ShowMonkey
   063A F1            [10] 1289 	pop	af
   063B F1            [10] 1290 	pop	af
   063C C1            [10] 1291 	pop	bc
                           1292 ;src\monkey1.c:593: x++;
   063D 0C            [ 4] 1293 	inc	c
                           1294 ;src\monkey1.c:594: if (x>3) x=0;
   063E 3E 03         [ 7] 1295 	ld	a, #0x03
   0640 91            [ 4] 1296 	sub	a, c
   0641 30 02         [12] 1297 	jr	NC,00105$
   0643 0E 00         [ 7] 1298 	ld	c, #0x00
   0645                    1299 00105$:
                           1300 ;src\monkey1.c:588: for(plane=0;plane<32;plane++)
   0645 04            [ 4] 1301 	inc	b
   0646 78            [ 4] 1302 	ld	a, b
   0647 D6 20         [ 7] 1303 	sub	a, #0x20
   0649 38 C0         [12] 1304 	jr	C,00104$
                           1305 ;src\monkey1.c:596: }
   064B C9            [10] 1306 	ret
                           1307 	.area _CODE
                           1308 	.area _INITIALIZER
                           1309 	.area _CABS (ABS)
